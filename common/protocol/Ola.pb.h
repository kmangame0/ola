// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ola.proto

#ifndef PROTOBUF_Ola_2eproto__INCLUDED
#define PROTOBUF_Ola_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ola {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Ola_2eproto();
void protobuf_AssignDesc_Ola_2eproto();
void protobuf_ShutdownFile_Ola_2eproto();

class STREAMING_NO_RESPONSE;
class Ack;
class PluginListRequest;
class PluginReloadRequest;
class PluginInfo;
class PluginListReply;
class PluginDescriptionRequest;
class PluginDescriptionReply;
class PluginStateRequest;
class PluginStateReply;
class PluginStateChangeRequest;
class DeviceInfoRequest;
class PortInfo;
class DeviceInfo;
class DeviceInfoReply;
class DmxData;
class RegisterDmxRequest;
class PatchPortRequest;
class UniverseNameRequest;
class MergeModeRequest;
class OptionalUniverseRequest;
class UniverseInfo;
class UniverseInfoReply;
class PortPriorityRequest;
class DeviceConfigRequest;
class DeviceConfigReply;
class UID;
class UniverseRequest;
class DiscoveryRequest;
class UIDListReply;
class RDMRequestOverrideOptions;
class RDMRequest;
class RDMDiscoveryRequest;
class RDMFrameTiming;
class RDMFrame;
class RDMResponse;
class TimeCode;

enum RegisterAction {
  REGISTER = 1,
  UNREGISTER = 2
};
bool RegisterAction_IsValid(int value);
const RegisterAction RegisterAction_MIN = REGISTER;
const RegisterAction RegisterAction_MAX = UNREGISTER;
const int RegisterAction_ARRAYSIZE = RegisterAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegisterAction_descriptor();
inline const ::std::string& RegisterAction_Name(RegisterAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegisterAction_descriptor(), value);
}
inline bool RegisterAction_Parse(
    const ::std::string& name, RegisterAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegisterAction>(
    RegisterAction_descriptor(), name, value);
}
enum PatchAction {
  PATCH = 1,
  UNPATCH = 2
};
bool PatchAction_IsValid(int value);
const PatchAction PatchAction_MIN = PATCH;
const PatchAction PatchAction_MAX = UNPATCH;
const int PatchAction_ARRAYSIZE = PatchAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* PatchAction_descriptor();
inline const ::std::string& PatchAction_Name(PatchAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    PatchAction_descriptor(), value);
}
inline bool PatchAction_Parse(
    const ::std::string& name, PatchAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PatchAction>(
    PatchAction_descriptor(), name, value);
}
enum MergeMode {
  HTP = 1,
  LTP = 2
};
bool MergeMode_IsValid(int value);
const MergeMode MergeMode_MIN = HTP;
const MergeMode MergeMode_MAX = LTP;
const int MergeMode_ARRAYSIZE = MergeMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* MergeMode_descriptor();
inline const ::std::string& MergeMode_Name(MergeMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MergeMode_descriptor(), value);
}
inline bool MergeMode_Parse(
    const ::std::string& name, MergeMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MergeMode>(
    MergeMode_descriptor(), name, value);
}
enum PluginIds {
  OLA_PLUGIN_ALL = 0,
  OLA_PLUGIN_DUMMY = 1,
  OLA_PLUGIN_ARTNET = 2,
  OLA_PLUGIN_SHOWNET = 3,
  OLA_PLUGIN_ESPNET = 4,
  OLA_PLUGIN_USBPRO = 5,
  OLA_PLUGIN_OPENDMX = 6,
  OLA_PLUGIN_SANDNET = 7,
  OLA_PLUGIN_STAGEPROFI = 8,
  OLA_PLUGIN_PATHPORT = 9,
  OLA_PLUGIN_DMX4LINUX = 10,
  OLA_PLUGIN_E131 = 11,
  OLA_PLUGIN_USBDMX = 12,
  OLA_PLUGIN_FTDIDMX = 13,
  OLA_PLUGIN_OSC = 14,
  OLA_PLUGIN_SPI = 15,
  OLA_PLUGIN_KINET = 16,
  OLA_PLUGIN_KARATE = 17,
  OLA_PLUGIN_MILINST = 18,
  OLA_PLUGIN_RENARD = 19,
  OLA_PLUGIN_UARTDMX = 20,
  OLA_PLUGIN_OPENPIXELCONTROL = 21,
  OLA_PLUGIN_GPIO = 22,
  OLA_PLUGIN_EXPERIMENTAL = 10000
};
bool PluginIds_IsValid(int value);
const PluginIds PluginIds_MIN = OLA_PLUGIN_ALL;
const PluginIds PluginIds_MAX = OLA_PLUGIN_EXPERIMENTAL;
const int PluginIds_ARRAYSIZE = PluginIds_MAX + 1;

const ::google::protobuf::EnumDescriptor* PluginIds_descriptor();
inline const ::std::string& PluginIds_Name(PluginIds value) {
  return ::google::protobuf::internal::NameOfEnum(
    PluginIds_descriptor(), value);
}
inline bool PluginIds_Parse(
    const ::std::string& name, PluginIds* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PluginIds>(
    PluginIds_descriptor(), name, value);
}
enum RDMResponseCode {
  RDM_COMPLETED_OK = 0,
  RDM_WAS_BROADCAST = 1,
  RDM_FAILED_TO_SEND = 2,
  RDM_TIMEOUT = 3,
  RDM_INVALID_RESPONSE = 4,
  RDM_UNKNOWN_UID = 5,
  RDM_CHECKSUM_INCORRECT = 6,
  RDM_TRANSACTION_MISMATCH = 7,
  RDM_SUB_DEVICE_MISMATCH = 8,
  RDM_SRC_UID_MISMATCH = 9,
  RDM_DEST_UID_MISMATCH = 10,
  RDM_WRONG_SUB_START_CODE = 11,
  RDM_PACKET_TOO_SHORT = 12,
  RDM_PACKET_LENGTH_MISMATCH = 13,
  RDM_PARAM_LENGTH_MISMATCH = 14,
  RDM_INVALID_COMMAND_CLASS = 15,
  RDM_COMMAND_CLASS_MISMATCH = 16,
  RDM_INVALID_RESPONSE_TYPE = 17,
  RDM_PLUGIN_DISCOVERY_NOT_SUPPORTED = 18,
  RDM_DUB_RESPONSE = 19
};
bool RDMResponseCode_IsValid(int value);
const RDMResponseCode RDMResponseCode_MIN = RDM_COMPLETED_OK;
const RDMResponseCode RDMResponseCode_MAX = RDM_DUB_RESPONSE;
const int RDMResponseCode_ARRAYSIZE = RDMResponseCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RDMResponseCode_descriptor();
inline const ::std::string& RDMResponseCode_Name(RDMResponseCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RDMResponseCode_descriptor(), value);
}
inline bool RDMResponseCode_Parse(
    const ::std::string& name, RDMResponseCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RDMResponseCode>(
    RDMResponseCode_descriptor(), name, value);
}
enum RDMResponseType {
  RDM_ACK = 0,
  RDM_ACK_TIMER = 1,
  RDM_NACK_REASON = 2
};
bool RDMResponseType_IsValid(int value);
const RDMResponseType RDMResponseType_MIN = RDM_ACK;
const RDMResponseType RDMResponseType_MAX = RDM_NACK_REASON;
const int RDMResponseType_ARRAYSIZE = RDMResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RDMResponseType_descriptor();
inline const ::std::string& RDMResponseType_Name(RDMResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RDMResponseType_descriptor(), value);
}
inline bool RDMResponseType_Parse(
    const ::std::string& name, RDMResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RDMResponseType>(
    RDMResponseType_descriptor(), name, value);
}
enum RDMCommandClass {
  RDM_GET_RESPONSE = 0,
  RDM_SET_RESPONSE = 1,
  RDM_DISCOVERY_RESPONSE = 2
};
bool RDMCommandClass_IsValid(int value);
const RDMCommandClass RDMCommandClass_MIN = RDM_GET_RESPONSE;
const RDMCommandClass RDMCommandClass_MAX = RDM_DISCOVERY_RESPONSE;
const int RDMCommandClass_ARRAYSIZE = RDMCommandClass_MAX + 1;

const ::google::protobuf::EnumDescriptor* RDMCommandClass_descriptor();
inline const ::std::string& RDMCommandClass_Name(RDMCommandClass value) {
  return ::google::protobuf::internal::NameOfEnum(
    RDMCommandClass_descriptor(), value);
}
inline bool RDMCommandClass_Parse(
    const ::std::string& name, RDMCommandClass* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RDMCommandClass>(
    RDMCommandClass_descriptor(), name, value);
}
enum TimeCodeType {
  TIMECODE_FILM = 0,
  TIMECODE_EBU = 1,
  TIMECODE_DF = 2,
  TIMECODE_SMPTE = 3
};
bool TimeCodeType_IsValid(int value);
const TimeCodeType TimeCodeType_MIN = TIMECODE_FILM;
const TimeCodeType TimeCodeType_MAX = TIMECODE_SMPTE;
const int TimeCodeType_ARRAYSIZE = TimeCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TimeCodeType_descriptor();
inline const ::std::string& TimeCodeType_Name(TimeCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimeCodeType_descriptor(), value);
}
inline bool TimeCodeType_Parse(
    const ::std::string& name, TimeCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeCodeType>(
    TimeCodeType_descriptor(), name, value);
}
// ===================================================================

class STREAMING_NO_RESPONSE : public ::google::protobuf::Message {
 public:
  STREAMING_NO_RESPONSE();
  virtual ~STREAMING_NO_RESPONSE();

  STREAMING_NO_RESPONSE(const STREAMING_NO_RESPONSE& from);

  inline STREAMING_NO_RESPONSE& operator=(const STREAMING_NO_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STREAMING_NO_RESPONSE& default_instance();

  void Swap(STREAMING_NO_RESPONSE* other);

  // implements Message ----------------------------------------------

  STREAMING_NO_RESPONSE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STREAMING_NO_RESPONSE& from);
  void MergeFrom(const STREAMING_NO_RESPONSE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ola.proto.STREAMING_NO_RESPONSE)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static STREAMING_NO_RESPONSE* default_instance_;
};
// -------------------------------------------------------------------

class Ack : public ::google::protobuf::Message {
 public:
  Ack();
  virtual ~Ack();

  Ack(const Ack& from);

  inline Ack& operator=(const Ack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ack& default_instance();

  void Swap(Ack* other);

  // implements Message ----------------------------------------------

  Ack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ack& from);
  void MergeFrom(const Ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ola.proto.Ack)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static Ack* default_instance_;
};
// -------------------------------------------------------------------

class PluginListRequest : public ::google::protobuf::Message {
 public:
  PluginListRequest();
  virtual ~PluginListRequest();

  PluginListRequest(const PluginListRequest& from);

  inline PluginListRequest& operator=(const PluginListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginListRequest& default_instance();

  void Swap(PluginListRequest* other);

  // implements Message ----------------------------------------------

  PluginListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginListRequest& from);
  void MergeFrom(const PluginListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ola.proto.PluginListRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginListRequest* default_instance_;
};
// -------------------------------------------------------------------

class PluginReloadRequest : public ::google::protobuf::Message {
 public:
  PluginReloadRequest();
  virtual ~PluginReloadRequest();

  PluginReloadRequest(const PluginReloadRequest& from);

  inline PluginReloadRequest& operator=(const PluginReloadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginReloadRequest& default_instance();

  void Swap(PluginReloadRequest* other);

  // implements Message ----------------------------------------------

  PluginReloadRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginReloadRequest& from);
  void MergeFrom(const PluginReloadRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ola.proto.PluginReloadRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginReloadRequest* default_instance_;
};
// -------------------------------------------------------------------

class PluginInfo : public ::google::protobuf::Message {
 public:
  PluginInfo();
  virtual ~PluginInfo();

  PluginInfo(const PluginInfo& from);

  inline PluginInfo& operator=(const PluginInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginInfo& default_instance();

  void Swap(PluginInfo* other);

  // implements Message ----------------------------------------------

  PluginInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginInfo& from);
  void MergeFrom(const PluginInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plugin_id = 1;
  inline bool has_plugin_id() const;
  inline void clear_plugin_id();
  static const int kPluginIdFieldNumber = 1;
  inline ::google::protobuf::int32 plugin_id() const;
  inline void set_plugin_id(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bool active = 3;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline bool active() const;
  inline void set_active(bool value);

  // optional bool enabled = 4;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 4;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:ola.proto.PluginInfo)
 private:
  inline void set_has_plugin_id();
  inline void clear_has_plugin_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_enabled();
  inline void clear_has_enabled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 plugin_id_;
  bool active_;
  bool enabled_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginInfo* default_instance_;
};
// -------------------------------------------------------------------

class PluginListReply : public ::google::protobuf::Message {
 public:
  PluginListReply();
  virtual ~PluginListReply();

  PluginListReply(const PluginListReply& from);

  inline PluginListReply& operator=(const PluginListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginListReply& default_instance();

  void Swap(PluginListReply* other);

  // implements Message ----------------------------------------------

  PluginListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginListReply& from);
  void MergeFrom(const PluginListReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ola.proto.PluginInfo plugin = 1;
  inline int plugin_size() const;
  inline void clear_plugin();
  static const int kPluginFieldNumber = 1;
  inline const ::ola::proto::PluginInfo& plugin(int index) const;
  inline ::ola::proto::PluginInfo* mutable_plugin(int index);
  inline ::ola::proto::PluginInfo* add_plugin();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >&
      plugin() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >*
      mutable_plugin();

  // @@protoc_insertion_point(class_scope:ola.proto.PluginListReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo > plugin_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginListReply* default_instance_;
};
// -------------------------------------------------------------------

class PluginDescriptionRequest : public ::google::protobuf::Message {
 public:
  PluginDescriptionRequest();
  virtual ~PluginDescriptionRequest();

  PluginDescriptionRequest(const PluginDescriptionRequest& from);

  inline PluginDescriptionRequest& operator=(const PluginDescriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginDescriptionRequest& default_instance();

  void Swap(PluginDescriptionRequest* other);

  // implements Message ----------------------------------------------

  PluginDescriptionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginDescriptionRequest& from);
  void MergeFrom(const PluginDescriptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plugin_id = 1;
  inline bool has_plugin_id() const;
  inline void clear_plugin_id();
  static const int kPluginIdFieldNumber = 1;
  inline ::google::protobuf::int32 plugin_id() const;
  inline void set_plugin_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.PluginDescriptionRequest)
 private:
  inline void set_has_plugin_id();
  inline void clear_has_plugin_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plugin_id_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginDescriptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class PluginDescriptionReply : public ::google::protobuf::Message {
 public:
  PluginDescriptionReply();
  virtual ~PluginDescriptionReply();

  PluginDescriptionReply(const PluginDescriptionReply& from);

  inline PluginDescriptionReply& operator=(const PluginDescriptionReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginDescriptionReply& default_instance();

  void Swap(PluginDescriptionReply* other);

  // implements Message ----------------------------------------------

  PluginDescriptionReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginDescriptionReply& from);
  void MergeFrom(const PluginDescriptionReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:ola.proto.PluginDescriptionReply)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* description_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginDescriptionReply* default_instance_;
};
// -------------------------------------------------------------------

class PluginStateRequest : public ::google::protobuf::Message {
 public:
  PluginStateRequest();
  virtual ~PluginStateRequest();

  PluginStateRequest(const PluginStateRequest& from);

  inline PluginStateRequest& operator=(const PluginStateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginStateRequest& default_instance();

  void Swap(PluginStateRequest* other);

  // implements Message ----------------------------------------------

  PluginStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginStateRequest& from);
  void MergeFrom(const PluginStateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plugin_id = 1;
  inline bool has_plugin_id() const;
  inline void clear_plugin_id();
  static const int kPluginIdFieldNumber = 1;
  inline ::google::protobuf::int32 plugin_id() const;
  inline void set_plugin_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.PluginStateRequest)
 private:
  inline void set_has_plugin_id();
  inline void clear_has_plugin_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plugin_id_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class PluginStateReply : public ::google::protobuf::Message {
 public:
  PluginStateReply();
  virtual ~PluginStateReply();

  PluginStateReply(const PluginStateReply& from);

  inline PluginStateReply& operator=(const PluginStateReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginStateReply& default_instance();

  void Swap(PluginStateReply* other);

  // implements Message ----------------------------------------------

  PluginStateReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginStateReply& from);
  void MergeFrom(const PluginStateReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bool enabled = 2;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // required bool active = 3;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline bool active() const;
  inline void set_active(bool value);

  // required string preferences_source = 4;
  inline bool has_preferences_source() const;
  inline void clear_preferences_source();
  static const int kPreferencesSourceFieldNumber = 4;
  inline const ::std::string& preferences_source() const;
  inline void set_preferences_source(const ::std::string& value);
  inline void set_preferences_source(const char* value);
  inline void set_preferences_source(const char* value, size_t size);
  inline ::std::string* mutable_preferences_source();
  inline ::std::string* release_preferences_source();
  inline void set_allocated_preferences_source(::std::string* preferences_source);

  // repeated .ola.proto.PluginInfo conflicts_with = 5;
  inline int conflicts_with_size() const;
  inline void clear_conflicts_with();
  static const int kConflictsWithFieldNumber = 5;
  inline const ::ola::proto::PluginInfo& conflicts_with(int index) const;
  inline ::ola::proto::PluginInfo* mutable_conflicts_with(int index);
  inline ::ola::proto::PluginInfo* add_conflicts_with();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >&
      conflicts_with() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >*
      mutable_conflicts_with();

  // @@protoc_insertion_point(class_scope:ola.proto.PluginStateReply)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_enabled();
  inline void clear_has_enabled();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_preferences_source();
  inline void clear_has_preferences_source();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* preferences_source_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo > conflicts_with_;
  bool enabled_;
  bool active_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginStateReply* default_instance_;
};
// -------------------------------------------------------------------

class PluginStateChangeRequest : public ::google::protobuf::Message {
 public:
  PluginStateChangeRequest();
  virtual ~PluginStateChangeRequest();

  PluginStateChangeRequest(const PluginStateChangeRequest& from);

  inline PluginStateChangeRequest& operator=(const PluginStateChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PluginStateChangeRequest& default_instance();

  void Swap(PluginStateChangeRequest* other);

  // implements Message ----------------------------------------------

  PluginStateChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PluginStateChangeRequest& from);
  void MergeFrom(const PluginStateChangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 plugin_id = 1;
  inline bool has_plugin_id() const;
  inline void clear_plugin_id();
  static const int kPluginIdFieldNumber = 1;
  inline ::google::protobuf::int32 plugin_id() const;
  inline void set_plugin_id(::google::protobuf::int32 value);

  // required bool enabled = 2;
  inline bool has_enabled() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  inline bool enabled() const;
  inline void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:ola.proto.PluginStateChangeRequest)
 private:
  inline void set_has_plugin_id();
  inline void clear_has_plugin_id();
  inline void set_has_enabled();
  inline void clear_has_enabled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plugin_id_;
  bool enabled_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PluginStateChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeviceInfoRequest : public ::google::protobuf::Message {
 public:
  DeviceInfoRequest();
  virtual ~DeviceInfoRequest();

  DeviceInfoRequest(const DeviceInfoRequest& from);

  inline DeviceInfoRequest& operator=(const DeviceInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceInfoRequest& default_instance();

  void Swap(DeviceInfoRequest* other);

  // implements Message ----------------------------------------------

  DeviceInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceInfoRequest& from);
  void MergeFrom(const DeviceInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 plugin_id = 1;
  inline bool has_plugin_id() const;
  inline void clear_plugin_id();
  static const int kPluginIdFieldNumber = 1;
  inline ::google::protobuf::int32 plugin_id() const;
  inline void set_plugin_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.DeviceInfoRequest)
 private:
  inline void set_has_plugin_id();
  inline void clear_has_plugin_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plugin_id_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DeviceInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class PortInfo : public ::google::protobuf::Message {
 public:
  PortInfo();
  virtual ~PortInfo();

  PortInfo(const PortInfo& from);

  inline PortInfo& operator=(const PortInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PortInfo& default_instance();

  void Swap(PortInfo* other);

  // implements Message ----------------------------------------------

  PortInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PortInfo& from);
  void MergeFrom(const PortInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 port_id = 1;
  inline bool has_port_id() const;
  inline void clear_port_id();
  static const int kPortIdFieldNumber = 1;
  inline ::google::protobuf::int32 port_id() const;
  inline void set_port_id(::google::protobuf::int32 value);

  // required int32 priority_capability = 2;
  inline bool has_priority_capability() const;
  inline void clear_priority_capability();
  static const int kPriorityCapabilityFieldNumber = 2;
  inline ::google::protobuf::int32 priority_capability() const;
  inline void set_priority_capability(::google::protobuf::int32 value);

  // required string description = 5;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 5;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional int32 universe = 3;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 3;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // optional bool active = 4;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 4;
  inline bool active() const;
  inline void set_active(bool value);

  // optional int32 priority_mode = 6;
  inline bool has_priority_mode() const;
  inline void clear_priority_mode();
  static const int kPriorityModeFieldNumber = 6;
  inline ::google::protobuf::int32 priority_mode() const;
  inline void set_priority_mode(::google::protobuf::int32 value);

  // optional int32 priority = 7;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 7;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // optional bool supports_rdm = 8 [default = false];
  inline bool has_supports_rdm() const;
  inline void clear_supports_rdm();
  static const int kSupportsRdmFieldNumber = 8;
  inline bool supports_rdm() const;
  inline void set_supports_rdm(bool value);

  // @@protoc_insertion_point(class_scope:ola.proto.PortInfo)
 private:
  inline void set_has_port_id();
  inline void clear_has_port_id();
  inline void set_has_priority_capability();
  inline void clear_has_priority_capability();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_priority_mode();
  inline void clear_has_priority_mode();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_supports_rdm();
  inline void clear_has_supports_rdm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 port_id_;
  ::google::protobuf::int32 priority_capability_;
  ::std::string* description_;
  ::google::protobuf::int32 universe_;
  ::google::protobuf::int32 priority_mode_;
  bool active_;
  bool supports_rdm_;
  ::google::protobuf::int32 priority_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PortInfo* default_instance_;
};
// -------------------------------------------------------------------

class DeviceInfo : public ::google::protobuf::Message {
 public:
  DeviceInfo();
  virtual ~DeviceInfo();

  DeviceInfo(const DeviceInfo& from);

  inline DeviceInfo& operator=(const DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceInfo& default_instance();

  void Swap(DeviceInfo* other);

  // implements Message ----------------------------------------------

  DeviceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceInfo& from);
  void MergeFrom(const DeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 device_alias = 1;
  inline bool has_device_alias() const;
  inline void clear_device_alias();
  static const int kDeviceAliasFieldNumber = 1;
  inline ::google::protobuf::int32 device_alias() const;
  inline void set_device_alias(::google::protobuf::int32 value);

  // required int32 plugin_id = 2;
  inline bool has_plugin_id() const;
  inline void clear_plugin_id();
  static const int kPluginIdFieldNumber = 2;
  inline ::google::protobuf::int32 plugin_id() const;
  inline void set_plugin_id(::google::protobuf::int32 value);

  // required string device_name = 3;
  inline bool has_device_name() const;
  inline void clear_device_name();
  static const int kDeviceNameFieldNumber = 3;
  inline const ::std::string& device_name() const;
  inline void set_device_name(const ::std::string& value);
  inline void set_device_name(const char* value);
  inline void set_device_name(const char* value, size_t size);
  inline ::std::string* mutable_device_name();
  inline ::std::string* release_device_name();
  inline void set_allocated_device_name(::std::string* device_name);

  // repeated .ola.proto.PortInfo input_port = 4;
  inline int input_port_size() const;
  inline void clear_input_port();
  static const int kInputPortFieldNumber = 4;
  inline const ::ola::proto::PortInfo& input_port(int index) const;
  inline ::ola::proto::PortInfo* mutable_input_port(int index);
  inline ::ola::proto::PortInfo* add_input_port();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
      input_port() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
      mutable_input_port();

  // repeated .ola.proto.PortInfo output_port = 5;
  inline int output_port_size() const;
  inline void clear_output_port();
  static const int kOutputPortFieldNumber = 5;
  inline const ::ola::proto::PortInfo& output_port(int index) const;
  inline ::ola::proto::PortInfo* mutable_output_port(int index);
  inline ::ola::proto::PortInfo* add_output_port();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
      output_port() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
      mutable_output_port();

  // required string device_id = 6;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 6;
  inline const ::std::string& device_id() const;
  inline void set_device_id(const ::std::string& value);
  inline void set_device_id(const char* value);
  inline void set_device_id(const char* value, size_t size);
  inline ::std::string* mutable_device_id();
  inline ::std::string* release_device_id();
  inline void set_allocated_device_id(::std::string* device_id);

  // @@protoc_insertion_point(class_scope:ola.proto.DeviceInfo)
 private:
  inline void set_has_device_alias();
  inline void clear_has_device_alias();
  inline void set_has_plugin_id();
  inline void clear_has_plugin_id();
  inline void set_has_device_name();
  inline void clear_has_device_name();
  inline void set_has_device_id();
  inline void clear_has_device_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 device_alias_;
  ::google::protobuf::int32 plugin_id_;
  ::std::string* device_name_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo > input_port_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo > output_port_;
  ::std::string* device_id_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class DeviceInfoReply : public ::google::protobuf::Message {
 public:
  DeviceInfoReply();
  virtual ~DeviceInfoReply();

  DeviceInfoReply(const DeviceInfoReply& from);

  inline DeviceInfoReply& operator=(const DeviceInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceInfoReply& default_instance();

  void Swap(DeviceInfoReply* other);

  // implements Message ----------------------------------------------

  DeviceInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceInfoReply& from);
  void MergeFrom(const DeviceInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ola.proto.DeviceInfo device = 1;
  inline int device_size() const;
  inline void clear_device();
  static const int kDeviceFieldNumber = 1;
  inline const ::ola::proto::DeviceInfo& device(int index) const;
  inline ::ola::proto::DeviceInfo* mutable_device(int index);
  inline ::ola::proto::DeviceInfo* add_device();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::DeviceInfo >&
      device() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::DeviceInfo >*
      mutable_device();

  // @@protoc_insertion_point(class_scope:ola.proto.DeviceInfoReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::DeviceInfo > device_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DeviceInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class DmxData : public ::google::protobuf::Message {
 public:
  DmxData();
  virtual ~DmxData();

  DmxData(const DmxData& from);

  inline DmxData& operator=(const DmxData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DmxData& default_instance();

  void Swap(DmxData* other);

  // implements Message ----------------------------------------------

  DmxData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DmxData& from);
  void MergeFrom(const DmxData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional int32 priority = 3;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 3;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.DmxData)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::int32 universe_;
  ::google::protobuf::int32 priority_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DmxData* default_instance_;
};
// -------------------------------------------------------------------

class RegisterDmxRequest : public ::google::protobuf::Message {
 public:
  RegisterDmxRequest();
  virtual ~RegisterDmxRequest();

  RegisterDmxRequest(const RegisterDmxRequest& from);

  inline RegisterDmxRequest& operator=(const RegisterDmxRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterDmxRequest& default_instance();

  void Swap(RegisterDmxRequest* other);

  // implements Message ----------------------------------------------

  RegisterDmxRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterDmxRequest& from);
  void MergeFrom(const RegisterDmxRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required .ola.proto.RegisterAction action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::ola::proto::RegisterAction action() const;
  inline void set_action(::ola::proto::RegisterAction value);

  // @@protoc_insertion_point(class_scope:ola.proto.RegisterDmxRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 universe_;
  int action_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RegisterDmxRequest* default_instance_;
};
// -------------------------------------------------------------------

class PatchPortRequest : public ::google::protobuf::Message {
 public:
  PatchPortRequest();
  virtual ~PatchPortRequest();

  PatchPortRequest(const PatchPortRequest& from);

  inline PatchPortRequest& operator=(const PatchPortRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PatchPortRequest& default_instance();

  void Swap(PatchPortRequest* other);

  // implements Message ----------------------------------------------

  PatchPortRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PatchPortRequest& from);
  void MergeFrom(const PatchPortRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required int32 device_alias = 2;
  inline bool has_device_alias() const;
  inline void clear_device_alias();
  static const int kDeviceAliasFieldNumber = 2;
  inline ::google::protobuf::int32 device_alias() const;
  inline void set_device_alias(::google::protobuf::int32 value);

  // required int32 port_id = 3;
  inline bool has_port_id() const;
  inline void clear_port_id();
  static const int kPortIdFieldNumber = 3;
  inline ::google::protobuf::int32 port_id() const;
  inline void set_port_id(::google::protobuf::int32 value);

  // required .ola.proto.PatchAction action = 4;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 4;
  inline ::ola::proto::PatchAction action() const;
  inline void set_action(::ola::proto::PatchAction value);

  // required bool is_output = 5;
  inline bool has_is_output() const;
  inline void clear_is_output();
  static const int kIsOutputFieldNumber = 5;
  inline bool is_output() const;
  inline void set_is_output(bool value);

  // @@protoc_insertion_point(class_scope:ola.proto.PatchPortRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_device_alias();
  inline void clear_has_device_alias();
  inline void set_has_port_id();
  inline void clear_has_port_id();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_is_output();
  inline void clear_has_is_output();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 universe_;
  ::google::protobuf::int32 device_alias_;
  ::google::protobuf::int32 port_id_;
  int action_;
  bool is_output_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PatchPortRequest* default_instance_;
};
// -------------------------------------------------------------------

class UniverseNameRequest : public ::google::protobuf::Message {
 public:
  UniverseNameRequest();
  virtual ~UniverseNameRequest();

  UniverseNameRequest(const UniverseNameRequest& from);

  inline UniverseNameRequest& operator=(const UniverseNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniverseNameRequest& default_instance();

  void Swap(UniverseNameRequest* other);

  // implements Message ----------------------------------------------

  UniverseNameRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniverseNameRequest& from);
  void MergeFrom(const UniverseNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ola.proto.UniverseNameRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 universe_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static UniverseNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class MergeModeRequest : public ::google::protobuf::Message {
 public:
  MergeModeRequest();
  virtual ~MergeModeRequest();

  MergeModeRequest(const MergeModeRequest& from);

  inline MergeModeRequest& operator=(const MergeModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeModeRequest& default_instance();

  void Swap(MergeModeRequest* other);

  // implements Message ----------------------------------------------

  MergeModeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MergeModeRequest& from);
  void MergeFrom(const MergeModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required .ola.proto.MergeMode merge_mode = 2;
  inline bool has_merge_mode() const;
  inline void clear_merge_mode();
  static const int kMergeModeFieldNumber = 2;
  inline ::ola::proto::MergeMode merge_mode() const;
  inline void set_merge_mode(::ola::proto::MergeMode value);

  // @@protoc_insertion_point(class_scope:ola.proto.MergeModeRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_merge_mode();
  inline void clear_has_merge_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 universe_;
  int merge_mode_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static MergeModeRequest* default_instance_;
};
// -------------------------------------------------------------------

class OptionalUniverseRequest : public ::google::protobuf::Message {
 public:
  OptionalUniverseRequest();
  virtual ~OptionalUniverseRequest();

  OptionalUniverseRequest(const OptionalUniverseRequest& from);

  inline OptionalUniverseRequest& operator=(const OptionalUniverseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OptionalUniverseRequest& default_instance();

  void Swap(OptionalUniverseRequest* other);

  // implements Message ----------------------------------------------

  OptionalUniverseRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OptionalUniverseRequest& from);
  void MergeFrom(const OptionalUniverseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.OptionalUniverseRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 universe_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static OptionalUniverseRequest* default_instance_;
};
// -------------------------------------------------------------------

class UniverseInfo : public ::google::protobuf::Message {
 public:
  UniverseInfo();
  virtual ~UniverseInfo();

  UniverseInfo(const UniverseInfo& from);

  inline UniverseInfo& operator=(const UniverseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniverseInfo& default_instance();

  void Swap(UniverseInfo* other);

  // implements Message ----------------------------------------------

  UniverseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniverseInfo& from);
  void MergeFrom(const UniverseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required .ola.proto.MergeMode merge_mode = 3;
  inline bool has_merge_mode() const;
  inline void clear_merge_mode();
  static const int kMergeModeFieldNumber = 3;
  inline ::ola::proto::MergeMode merge_mode() const;
  inline void set_merge_mode(::ola::proto::MergeMode value);

  // required int32 input_port_count = 4;
  inline bool has_input_port_count() const;
  inline void clear_input_port_count();
  static const int kInputPortCountFieldNumber = 4;
  inline ::google::protobuf::int32 input_port_count() const;
  inline void set_input_port_count(::google::protobuf::int32 value);

  // required int32 output_port_count = 5;
  inline bool has_output_port_count() const;
  inline void clear_output_port_count();
  static const int kOutputPortCountFieldNumber = 5;
  inline ::google::protobuf::int32 output_port_count() const;
  inline void set_output_port_count(::google::protobuf::int32 value);

  // required int32 rdm_devices = 6;
  inline bool has_rdm_devices() const;
  inline void clear_rdm_devices();
  static const int kRdmDevicesFieldNumber = 6;
  inline ::google::protobuf::int32 rdm_devices() const;
  inline void set_rdm_devices(::google::protobuf::int32 value);

  // repeated .ola.proto.PortInfo input_ports = 7;
  inline int input_ports_size() const;
  inline void clear_input_ports();
  static const int kInputPortsFieldNumber = 7;
  inline const ::ola::proto::PortInfo& input_ports(int index) const;
  inline ::ola::proto::PortInfo* mutable_input_ports(int index);
  inline ::ola::proto::PortInfo* add_input_ports();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
      input_ports() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
      mutable_input_ports();

  // repeated .ola.proto.PortInfo output_ports = 8;
  inline int output_ports_size() const;
  inline void clear_output_ports();
  static const int kOutputPortsFieldNumber = 8;
  inline const ::ola::proto::PortInfo& output_ports(int index) const;
  inline ::ola::proto::PortInfo* mutable_output_ports(int index);
  inline ::ola::proto::PortInfo* add_output_ports();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
      output_ports() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
      mutable_output_ports();

  // @@protoc_insertion_point(class_scope:ola.proto.UniverseInfo)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_merge_mode();
  inline void clear_has_merge_mode();
  inline void set_has_input_port_count();
  inline void clear_has_input_port_count();
  inline void set_has_output_port_count();
  inline void clear_has_output_port_count();
  inline void set_has_rdm_devices();
  inline void clear_has_rdm_devices();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 universe_;
  int merge_mode_;
  ::google::protobuf::int32 input_port_count_;
  ::google::protobuf::int32 output_port_count_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo > input_ports_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo > output_ports_;
  ::google::protobuf::int32 rdm_devices_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static UniverseInfo* default_instance_;
};
// -------------------------------------------------------------------

class UniverseInfoReply : public ::google::protobuf::Message {
 public:
  UniverseInfoReply();
  virtual ~UniverseInfoReply();

  UniverseInfoReply(const UniverseInfoReply& from);

  inline UniverseInfoReply& operator=(const UniverseInfoReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniverseInfoReply& default_instance();

  void Swap(UniverseInfoReply* other);

  // implements Message ----------------------------------------------

  UniverseInfoReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniverseInfoReply& from);
  void MergeFrom(const UniverseInfoReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ola.proto.UniverseInfo universe = 1;
  inline int universe_size() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline const ::ola::proto::UniverseInfo& universe(int index) const;
  inline ::ola::proto::UniverseInfo* mutable_universe(int index);
  inline ::ola::proto::UniverseInfo* add_universe();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::UniverseInfo >&
      universe() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::UniverseInfo >*
      mutable_universe();

  // @@protoc_insertion_point(class_scope:ola.proto.UniverseInfoReply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::UniverseInfo > universe_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static UniverseInfoReply* default_instance_;
};
// -------------------------------------------------------------------

class PortPriorityRequest : public ::google::protobuf::Message {
 public:
  PortPriorityRequest();
  virtual ~PortPriorityRequest();

  PortPriorityRequest(const PortPriorityRequest& from);

  inline PortPriorityRequest& operator=(const PortPriorityRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PortPriorityRequest& default_instance();

  void Swap(PortPriorityRequest* other);

  // implements Message ----------------------------------------------

  PortPriorityRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PortPriorityRequest& from);
  void MergeFrom(const PortPriorityRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 device_alias = 1;
  inline bool has_device_alias() const;
  inline void clear_device_alias();
  static const int kDeviceAliasFieldNumber = 1;
  inline ::google::protobuf::int32 device_alias() const;
  inline void set_device_alias(::google::protobuf::int32 value);

  // required bool is_output = 2;
  inline bool has_is_output() const;
  inline void clear_is_output();
  static const int kIsOutputFieldNumber = 2;
  inline bool is_output() const;
  inline void set_is_output(bool value);

  // required int32 port_id = 3;
  inline bool has_port_id() const;
  inline void clear_port_id();
  static const int kPortIdFieldNumber = 3;
  inline ::google::protobuf::int32 port_id() const;
  inline void set_port_id(::google::protobuf::int32 value);

  // required int32 priority_mode = 4;
  inline bool has_priority_mode() const;
  inline void clear_priority_mode();
  static const int kPriorityModeFieldNumber = 4;
  inline ::google::protobuf::int32 priority_mode() const;
  inline void set_priority_mode(::google::protobuf::int32 value);

  // optional int32 priority = 5;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 5;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.PortPriorityRequest)
 private:
  inline void set_has_device_alias();
  inline void clear_has_device_alias();
  inline void set_has_is_output();
  inline void clear_has_is_output();
  inline void set_has_port_id();
  inline void clear_has_port_id();
  inline void set_has_priority_mode();
  inline void clear_has_priority_mode();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 device_alias_;
  bool is_output_;
  ::google::protobuf::int32 port_id_;
  ::google::protobuf::int32 priority_mode_;
  ::google::protobuf::int32 priority_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static PortPriorityRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeviceConfigRequest : public ::google::protobuf::Message {
 public:
  DeviceConfigRequest();
  virtual ~DeviceConfigRequest();

  DeviceConfigRequest(const DeviceConfigRequest& from);

  inline DeviceConfigRequest& operator=(const DeviceConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceConfigRequest& default_instance();

  void Swap(DeviceConfigRequest* other);

  // implements Message ----------------------------------------------

  DeviceConfigRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceConfigRequest& from);
  void MergeFrom(const DeviceConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 device_alias = 1;
  inline bool has_device_alias() const;
  inline void clear_device_alias();
  static const int kDeviceAliasFieldNumber = 1;
  inline ::google::protobuf::int32 device_alias() const;
  inline void set_device_alias(::google::protobuf::int32 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:ola.proto.DeviceConfigRequest)
 private:
  inline void set_has_device_alias();
  inline void clear_has_device_alias();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::int32 device_alias_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DeviceConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeviceConfigReply : public ::google::protobuf::Message {
 public:
  DeviceConfigReply();
  virtual ~DeviceConfigReply();

  DeviceConfigReply(const DeviceConfigReply& from);

  inline DeviceConfigReply& operator=(const DeviceConfigReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceConfigReply& default_instance();

  void Swap(DeviceConfigReply* other);

  // implements Message ----------------------------------------------

  DeviceConfigReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceConfigReply& from);
  void MergeFrom(const DeviceConfigReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:ola.proto.DeviceConfigReply)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DeviceConfigReply* default_instance_;
};
// -------------------------------------------------------------------

class UID : public ::google::protobuf::Message {
 public:
  UID();
  virtual ~UID();

  UID(const UID& from);

  inline UID& operator=(const UID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UID& default_instance();

  void Swap(UID* other);

  // implements Message ----------------------------------------------

  UID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UID& from);
  void MergeFrom(const UID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 esta_id = 1;
  inline bool has_esta_id() const;
  inline void clear_esta_id();
  static const int kEstaIdFieldNumber = 1;
  inline ::google::protobuf::int32 esta_id() const;
  inline void set_esta_id(::google::protobuf::int32 value);

  // required fixed32 device_id = 2;
  inline bool has_device_id() const;
  inline void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 device_id() const;
  inline void set_device_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.UID)
 private:
  inline void set_has_esta_id();
  inline void clear_has_esta_id();
  inline void set_has_device_id();
  inline void clear_has_device_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 esta_id_;
  ::google::protobuf::uint32 device_id_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static UID* default_instance_;
};
// -------------------------------------------------------------------

class UniverseRequest : public ::google::protobuf::Message {
 public:
  UniverseRequest();
  virtual ~UniverseRequest();

  UniverseRequest(const UniverseRequest& from);

  inline UniverseRequest& operator=(const UniverseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniverseRequest& default_instance();

  void Swap(UniverseRequest* other);

  // implements Message ----------------------------------------------

  UniverseRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniverseRequest& from);
  void MergeFrom(const UniverseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.UniverseRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 universe_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static UniverseRequest* default_instance_;
};
// -------------------------------------------------------------------

class DiscoveryRequest : public ::google::protobuf::Message {
 public:
  DiscoveryRequest();
  virtual ~DiscoveryRequest();

  DiscoveryRequest(const DiscoveryRequest& from);

  inline DiscoveryRequest& operator=(const DiscoveryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DiscoveryRequest& default_instance();

  void Swap(DiscoveryRequest* other);

  // implements Message ----------------------------------------------

  DiscoveryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DiscoveryRequest& from);
  void MergeFrom(const DiscoveryRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required bool full = 2;
  inline bool has_full() const;
  inline void clear_full();
  static const int kFullFieldNumber = 2;
  inline bool full() const;
  inline void set_full(bool value);

  // @@protoc_insertion_point(class_scope:ola.proto.DiscoveryRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_full();
  inline void clear_has_full();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 universe_;
  bool full_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static DiscoveryRequest* default_instance_;
};
// -------------------------------------------------------------------

class UIDListReply : public ::google::protobuf::Message {
 public:
  UIDListReply();
  virtual ~UIDListReply();

  UIDListReply(const UIDListReply& from);

  inline UIDListReply& operator=(const UIDListReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UIDListReply& default_instance();

  void Swap(UIDListReply* other);

  // implements Message ----------------------------------------------

  UIDListReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UIDListReply& from);
  void MergeFrom(const UIDListReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // repeated .ola.proto.UID uid = 2;
  inline int uid_size() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline const ::ola::proto::UID& uid(int index) const;
  inline ::ola::proto::UID* mutable_uid(int index);
  inline ::ola::proto::UID* add_uid();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::UID >&
      uid() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::UID >*
      mutable_uid();

  // @@protoc_insertion_point(class_scope:ola.proto.UIDListReply)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::UID > uid_;
  ::google::protobuf::int32 universe_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static UIDListReply* default_instance_;
};
// -------------------------------------------------------------------

class RDMRequestOverrideOptions : public ::google::protobuf::Message {
 public:
  RDMRequestOverrideOptions();
  virtual ~RDMRequestOverrideOptions();

  RDMRequestOverrideOptions(const RDMRequestOverrideOptions& from);

  inline RDMRequestOverrideOptions& operator=(const RDMRequestOverrideOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RDMRequestOverrideOptions& default_instance();

  void Swap(RDMRequestOverrideOptions* other);

  // implements Message ----------------------------------------------

  RDMRequestOverrideOptions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RDMRequestOverrideOptions& from);
  void MergeFrom(const RDMRequestOverrideOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sub_start_code = 1;
  inline bool has_sub_start_code() const;
  inline void clear_sub_start_code();
  static const int kSubStartCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 sub_start_code() const;
  inline void set_sub_start_code(::google::protobuf::uint32 value);

  // optional uint32 message_length = 2;
  inline bool has_message_length() const;
  inline void clear_message_length();
  static const int kMessageLengthFieldNumber = 2;
  inline ::google::protobuf::uint32 message_length() const;
  inline void set_message_length(::google::protobuf::uint32 value);

  // optional uint32 message_count = 3;
  inline bool has_message_count() const;
  inline void clear_message_count();
  static const int kMessageCountFieldNumber = 3;
  inline ::google::protobuf::uint32 message_count() const;
  inline void set_message_count(::google::protobuf::uint32 value);

  // optional uint32 checksum = 4;
  inline bool has_checksum() const;
  inline void clear_checksum();
  static const int kChecksumFieldNumber = 4;
  inline ::google::protobuf::uint32 checksum() const;
  inline void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.RDMRequestOverrideOptions)
 private:
  inline void set_has_sub_start_code();
  inline void clear_has_sub_start_code();
  inline void set_has_message_length();
  inline void clear_has_message_length();
  inline void set_has_message_count();
  inline void clear_has_message_count();
  inline void set_has_checksum();
  inline void clear_has_checksum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sub_start_code_;
  ::google::protobuf::uint32 message_length_;
  ::google::protobuf::uint32 message_count_;
  ::google::protobuf::uint32 checksum_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RDMRequestOverrideOptions* default_instance_;
};
// -------------------------------------------------------------------

class RDMRequest : public ::google::protobuf::Message {
 public:
  RDMRequest();
  virtual ~RDMRequest();

  RDMRequest(const RDMRequest& from);

  inline RDMRequest& operator=(const RDMRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RDMRequest& default_instance();

  void Swap(RDMRequest* other);

  // implements Message ----------------------------------------------

  RDMRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RDMRequest& from);
  void MergeFrom(const RDMRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required .ola.proto.UID uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline const ::ola::proto::UID& uid() const;
  inline ::ola::proto::UID* mutable_uid();
  inline ::ola::proto::UID* release_uid();
  inline void set_allocated_uid(::ola::proto::UID* uid);

  // required int32 sub_device = 3;
  inline bool has_sub_device() const;
  inline void clear_sub_device();
  static const int kSubDeviceFieldNumber = 3;
  inline ::google::protobuf::int32 sub_device() const;
  inline void set_sub_device(::google::protobuf::int32 value);

  // required int32 param_id = 4;
  inline bool has_param_id() const;
  inline void clear_param_id();
  static const int kParamIdFieldNumber = 4;
  inline ::google::protobuf::int32 param_id() const;
  inline void set_param_id(::google::protobuf::int32 value);

  // required bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // required bool is_set = 6;
  inline bool has_is_set() const;
  inline void clear_is_set();
  static const int kIsSetFieldNumber = 6;
  inline bool is_set() const;
  inline void set_is_set(bool value);

  // optional bool include_raw_response = 7 [default = false];
  inline bool has_include_raw_response() const;
  inline void clear_include_raw_response();
  static const int kIncludeRawResponseFieldNumber = 7;
  inline bool include_raw_response() const;
  inline void set_include_raw_response(bool value);

  // optional .ola.proto.RDMRequestOverrideOptions options = 8;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 8;
  inline const ::ola::proto::RDMRequestOverrideOptions& options() const;
  inline ::ola::proto::RDMRequestOverrideOptions* mutable_options();
  inline ::ola::proto::RDMRequestOverrideOptions* release_options();
  inline void set_allocated_options(::ola::proto::RDMRequestOverrideOptions* options);

  // @@protoc_insertion_point(class_scope:ola.proto.RDMRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_sub_device();
  inline void clear_has_sub_device();
  inline void set_has_param_id();
  inline void clear_has_param_id();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_is_set();
  inline void clear_has_is_set();
  inline void set_has_include_raw_response();
  inline void clear_has_include_raw_response();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ola::proto::UID* uid_;
  ::google::protobuf::int32 universe_;
  ::google::protobuf::int32 sub_device_;
  ::std::string* data_;
  ::google::protobuf::int32 param_id_;
  bool is_set_;
  bool include_raw_response_;
  ::ola::proto::RDMRequestOverrideOptions* options_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RDMRequest* default_instance_;
};
// -------------------------------------------------------------------

class RDMDiscoveryRequest : public ::google::protobuf::Message {
 public:
  RDMDiscoveryRequest();
  virtual ~RDMDiscoveryRequest();

  RDMDiscoveryRequest(const RDMDiscoveryRequest& from);

  inline RDMDiscoveryRequest& operator=(const RDMDiscoveryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RDMDiscoveryRequest& default_instance();

  void Swap(RDMDiscoveryRequest* other);

  // implements Message ----------------------------------------------

  RDMDiscoveryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RDMDiscoveryRequest& from);
  void MergeFrom(const RDMDiscoveryRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline ::google::protobuf::int32 universe() const;
  inline void set_universe(::google::protobuf::int32 value);

  // required .ola.proto.UID uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline const ::ola::proto::UID& uid() const;
  inline ::ola::proto::UID* mutable_uid();
  inline ::ola::proto::UID* release_uid();
  inline void set_allocated_uid(::ola::proto::UID* uid);

  // required int32 sub_device = 3;
  inline bool has_sub_device() const;
  inline void clear_sub_device();
  static const int kSubDeviceFieldNumber = 3;
  inline ::google::protobuf::int32 sub_device() const;
  inline void set_sub_device(::google::protobuf::int32 value);

  // required int32 param_id = 4;
  inline bool has_param_id() const;
  inline void clear_param_id();
  static const int kParamIdFieldNumber = 4;
  inline ::google::protobuf::int32 param_id() const;
  inline void set_param_id(::google::protobuf::int32 value);

  // required bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // optional bool include_raw_response = 6 [default = false];
  inline bool has_include_raw_response() const;
  inline void clear_include_raw_response();
  static const int kIncludeRawResponseFieldNumber = 6;
  inline bool include_raw_response() const;
  inline void set_include_raw_response(bool value);

  // optional .ola.proto.RDMRequestOverrideOptions options = 8;
  inline bool has_options() const;
  inline void clear_options();
  static const int kOptionsFieldNumber = 8;
  inline const ::ola::proto::RDMRequestOverrideOptions& options() const;
  inline ::ola::proto::RDMRequestOverrideOptions* mutable_options();
  inline ::ola::proto::RDMRequestOverrideOptions* release_options();
  inline void set_allocated_options(::ola::proto::RDMRequestOverrideOptions* options);

  // @@protoc_insertion_point(class_scope:ola.proto.RDMDiscoveryRequest)
 private:
  inline void set_has_universe();
  inline void clear_has_universe();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_sub_device();
  inline void clear_has_sub_device();
  inline void set_has_param_id();
  inline void clear_has_param_id();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_include_raw_response();
  inline void clear_has_include_raw_response();
  inline void set_has_options();
  inline void clear_has_options();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ola::proto::UID* uid_;
  ::google::protobuf::int32 universe_;
  ::google::protobuf::int32 sub_device_;
  ::std::string* data_;
  ::google::protobuf::int32 param_id_;
  bool include_raw_response_;
  ::ola::proto::RDMRequestOverrideOptions* options_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RDMDiscoveryRequest* default_instance_;
};
// -------------------------------------------------------------------

class RDMFrameTiming : public ::google::protobuf::Message {
 public:
  RDMFrameTiming();
  virtual ~RDMFrameTiming();

  RDMFrameTiming(const RDMFrameTiming& from);

  inline RDMFrameTiming& operator=(const RDMFrameTiming& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RDMFrameTiming& default_instance();

  void Swap(RDMFrameTiming* other);

  // implements Message ----------------------------------------------

  RDMFrameTiming* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RDMFrameTiming& from);
  void MergeFrom(const RDMFrameTiming& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 response_delay = 1;
  inline bool has_response_delay() const;
  inline void clear_response_delay();
  static const int kResponseDelayFieldNumber = 1;
  inline ::google::protobuf::int32 response_delay() const;
  inline void set_response_delay(::google::protobuf::int32 value);

  // optional int32 break_time = 2;
  inline bool has_break_time() const;
  inline void clear_break_time();
  static const int kBreakTimeFieldNumber = 2;
  inline ::google::protobuf::int32 break_time() const;
  inline void set_break_time(::google::protobuf::int32 value);

  // optional int32 mark_time = 3;
  inline bool has_mark_time() const;
  inline void clear_mark_time();
  static const int kMarkTimeFieldNumber = 3;
  inline ::google::protobuf::int32 mark_time() const;
  inline void set_mark_time(::google::protobuf::int32 value);

  // optional int32 data_time = 4;
  inline bool has_data_time() const;
  inline void clear_data_time();
  static const int kDataTimeFieldNumber = 4;
  inline ::google::protobuf::int32 data_time() const;
  inline void set_data_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ola.proto.RDMFrameTiming)
 private:
  inline void set_has_response_delay();
  inline void clear_has_response_delay();
  inline void set_has_break_time();
  inline void clear_has_break_time();
  inline void set_has_mark_time();
  inline void clear_has_mark_time();
  inline void set_has_data_time();
  inline void clear_has_data_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 response_delay_;
  ::google::protobuf::int32 break_time_;
  ::google::protobuf::int32 mark_time_;
  ::google::protobuf::int32 data_time_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RDMFrameTiming* default_instance_;
};
// -------------------------------------------------------------------

class RDMFrame : public ::google::protobuf::Message {
 public:
  RDMFrame();
  virtual ~RDMFrame();

  RDMFrame(const RDMFrame& from);

  inline RDMFrame& operator=(const RDMFrame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RDMFrame& default_instance();

  void Swap(RDMFrame* other);

  // implements Message ----------------------------------------------

  RDMFrame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RDMFrame& from);
  void MergeFrom(const RDMFrame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes raw_response = 1;
  inline bool has_raw_response() const;
  inline void clear_raw_response();
  static const int kRawResponseFieldNumber = 1;
  inline const ::std::string& raw_response() const;
  inline void set_raw_response(const ::std::string& value);
  inline void set_raw_response(const char* value);
  inline void set_raw_response(const void* value, size_t size);
  inline ::std::string* mutable_raw_response();
  inline ::std::string* release_raw_response();
  inline void set_allocated_raw_response(::std::string* raw_response);

  // optional .ola.proto.RDMFrameTiming timing = 2;
  inline bool has_timing() const;
  inline void clear_timing();
  static const int kTimingFieldNumber = 2;
  inline const ::ola::proto::RDMFrameTiming& timing() const;
  inline ::ola::proto::RDMFrameTiming* mutable_timing();
  inline ::ola::proto::RDMFrameTiming* release_timing();
  inline void set_allocated_timing(::ola::proto::RDMFrameTiming* timing);

  // @@protoc_insertion_point(class_scope:ola.proto.RDMFrame)
 private:
  inline void set_has_raw_response();
  inline void clear_has_raw_response();
  inline void set_has_timing();
  inline void clear_has_timing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* raw_response_;
  ::ola::proto::RDMFrameTiming* timing_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RDMFrame* default_instance_;
};
// -------------------------------------------------------------------

class RDMResponse : public ::google::protobuf::Message {
 public:
  RDMResponse();
  virtual ~RDMResponse();

  RDMResponse(const RDMResponse& from);

  inline RDMResponse& operator=(const RDMResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RDMResponse& default_instance();

  void Swap(RDMResponse* other);

  // implements Message ----------------------------------------------

  RDMResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RDMResponse& from);
  void MergeFrom(const RDMResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ola.proto.RDMResponseCode response_code = 1;
  inline bool has_response_code() const;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::ola::proto::RDMResponseCode response_code() const;
  inline void set_response_code(::ola::proto::RDMResponseCode value);

  // optional .ola.proto.UID source_uid = 9;
  inline bool has_source_uid() const;
  inline void clear_source_uid();
  static const int kSourceUidFieldNumber = 9;
  inline const ::ola::proto::UID& source_uid() const;
  inline ::ola::proto::UID* mutable_source_uid();
  inline ::ola::proto::UID* release_source_uid();
  inline void set_allocated_source_uid(::ola::proto::UID* source_uid);

  // optional .ola.proto.UID dest_uid = 10;
  inline bool has_dest_uid() const;
  inline void clear_dest_uid();
  static const int kDestUidFieldNumber = 10;
  inline const ::ola::proto::UID& dest_uid() const;
  inline ::ola::proto::UID* mutable_dest_uid();
  inline ::ola::proto::UID* release_dest_uid();
  inline void set_allocated_dest_uid(::ola::proto::UID* dest_uid);

  // optional int32 transaction_number = 11;
  inline bool has_transaction_number() const;
  inline void clear_transaction_number();
  static const int kTransactionNumberFieldNumber = 11;
  inline ::google::protobuf::int32 transaction_number() const;
  inline void set_transaction_number(::google::protobuf::int32 value);

  // optional .ola.proto.RDMResponseType response_type = 2;
  inline bool has_response_type() const;
  inline void clear_response_type();
  static const int kResponseTypeFieldNumber = 2;
  inline ::ola::proto::RDMResponseType response_type() const;
  inline void set_response_type(::ola::proto::RDMResponseType value);

  // optional uint32 message_count = 3 [default = 0];
  inline bool has_message_count() const;
  inline void clear_message_count();
  static const int kMessageCountFieldNumber = 3;
  inline ::google::protobuf::uint32 message_count() const;
  inline void set_message_count(::google::protobuf::uint32 value);

  // optional uint32 sub_device = 7;
  inline bool has_sub_device() const;
  inline void clear_sub_device();
  static const int kSubDeviceFieldNumber = 7;
  inline ::google::protobuf::uint32 sub_device() const;
  inline void set_sub_device(::google::protobuf::uint32 value);

  // optional .ola.proto.RDMCommandClass command_class = 6;
  inline bool has_command_class() const;
  inline void clear_command_class();
  static const int kCommandClassFieldNumber = 6;
  inline ::ola::proto::RDMCommandClass command_class() const;
  inline void set_command_class(::ola::proto::RDMCommandClass value);

  // optional uint32 param_id = 5;
  inline bool has_param_id() const;
  inline void clear_param_id();
  static const int kParamIdFieldNumber = 5;
  inline ::google::protobuf::uint32 param_id() const;
  inline void set_param_id(::google::protobuf::uint32 value);

  // optional bytes data = 4 [default = ""];
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // repeated bytes raw_response = 8;
  inline int raw_response_size() const;
  inline void clear_raw_response();
  static const int kRawResponseFieldNumber = 8;
  inline const ::std::string& raw_response(int index) const;
  inline ::std::string* mutable_raw_response(int index);
  inline void set_raw_response(int index, const ::std::string& value);
  inline void set_raw_response(int index, const char* value);
  inline void set_raw_response(int index, const void* value, size_t size);
  inline ::std::string* add_raw_response();
  inline void add_raw_response(const ::std::string& value);
  inline void add_raw_response(const char* value);
  inline void add_raw_response(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& raw_response() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_raw_response();

  // repeated .ola.proto.RDMFrame raw_frame = 12;
  inline int raw_frame_size() const;
  inline void clear_raw_frame();
  static const int kRawFrameFieldNumber = 12;
  inline const ::ola::proto::RDMFrame& raw_frame(int index) const;
  inline ::ola::proto::RDMFrame* mutable_raw_frame(int index);
  inline ::ola::proto::RDMFrame* add_raw_frame();
  inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::RDMFrame >&
      raw_frame() const;
  inline ::google::protobuf::RepeatedPtrField< ::ola::proto::RDMFrame >*
      mutable_raw_frame();

  // @@protoc_insertion_point(class_scope:ola.proto.RDMResponse)
 private:
  inline void set_has_response_code();
  inline void clear_has_response_code();
  inline void set_has_source_uid();
  inline void clear_has_source_uid();
  inline void set_has_dest_uid();
  inline void clear_has_dest_uid();
  inline void set_has_transaction_number();
  inline void clear_has_transaction_number();
  inline void set_has_response_type();
  inline void clear_has_response_type();
  inline void set_has_message_count();
  inline void clear_has_message_count();
  inline void set_has_sub_device();
  inline void clear_has_sub_device();
  inline void set_has_command_class();
  inline void clear_has_command_class();
  inline void set_has_param_id();
  inline void clear_has_param_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ola::proto::UID* source_uid_;
  int response_code_;
  ::google::protobuf::int32 transaction_number_;
  ::ola::proto::UID* dest_uid_;
  int response_type_;
  ::google::protobuf::uint32 message_count_;
  ::google::protobuf::uint32 sub_device_;
  int command_class_;
  ::std::string* data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> raw_response_;
  ::google::protobuf::RepeatedPtrField< ::ola::proto::RDMFrame > raw_frame_;
  ::google::protobuf::uint32 param_id_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static RDMResponse* default_instance_;
};
// -------------------------------------------------------------------

class TimeCode : public ::google::protobuf::Message {
 public:
  TimeCode();
  virtual ~TimeCode();

  TimeCode(const TimeCode& from);

  inline TimeCode& operator=(const TimeCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeCode& default_instance();

  void Swap(TimeCode* other);

  // implements Message ----------------------------------------------

  TimeCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TimeCode& from);
  void MergeFrom(const TimeCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hours = 1;
  inline bool has_hours() const;
  inline void clear_hours();
  static const int kHoursFieldNumber = 1;
  inline ::google::protobuf::uint32 hours() const;
  inline void set_hours(::google::protobuf::uint32 value);

  // required uint32 minutes = 2;
  inline bool has_minutes() const;
  inline void clear_minutes();
  static const int kMinutesFieldNumber = 2;
  inline ::google::protobuf::uint32 minutes() const;
  inline void set_minutes(::google::protobuf::uint32 value);

  // required uint32 seconds = 3;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 3;
  inline ::google::protobuf::uint32 seconds() const;
  inline void set_seconds(::google::protobuf::uint32 value);

  // required uint32 frames = 4;
  inline bool has_frames() const;
  inline void clear_frames();
  static const int kFramesFieldNumber = 4;
  inline ::google::protobuf::uint32 frames() const;
  inline void set_frames(::google::protobuf::uint32 value);

  // required .ola.proto.TimeCodeType type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::ola::proto::TimeCodeType type() const;
  inline void set_type(::ola::proto::TimeCodeType value);

  // @@protoc_insertion_point(class_scope:ola.proto.TimeCode)
 private:
  inline void set_has_hours();
  inline void clear_has_hours();
  inline void set_has_minutes();
  inline void clear_has_minutes();
  inline void set_has_seconds();
  inline void clear_has_seconds();
  inline void set_has_frames();
  inline void clear_has_frames();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 hours_;
  ::google::protobuf::uint32 minutes_;
  ::google::protobuf::uint32 seconds_;
  ::google::protobuf::uint32 frames_;
  int type_;
  friend void  protobuf_AddDesc_Ola_2eproto();
  friend void protobuf_AssignDesc_Ola_2eproto();
  friend void protobuf_ShutdownFile_Ola_2eproto();

  void InitAsDefaultInstance();
  static TimeCode* default_instance_;
};
// ===================================================================


// ===================================================================

// STREAMING_NO_RESPONSE

// -------------------------------------------------------------------

// Ack

// -------------------------------------------------------------------

// PluginListRequest

// -------------------------------------------------------------------

// PluginReloadRequest

// -------------------------------------------------------------------

// PluginInfo

// required int32 plugin_id = 1;
inline bool PluginInfo::has_plugin_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginInfo::set_has_plugin_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginInfo::clear_has_plugin_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginInfo::clear_plugin_id() {
  plugin_id_ = 0;
  clear_has_plugin_id();
}
inline ::google::protobuf::int32 PluginInfo::plugin_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginInfo.plugin_id)
  return plugin_id_;
}
inline void PluginInfo::set_plugin_id(::google::protobuf::int32 value) {
  set_has_plugin_id();
  plugin_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginInfo.plugin_id)
}

// required string name = 2;
inline bool PluginInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PluginInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PluginInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PluginInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PluginInfo::name() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginInfo.name)
  return *name_;
}
inline void PluginInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.PluginInfo.name)
}
inline void PluginInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.PluginInfo.name)
}
inline void PluginInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.PluginInfo.name)
}
inline ::std::string* PluginInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginInfo.name)
  return name_;
}
inline ::std::string* PluginInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PluginInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.PluginInfo.name)
}

// required bool active = 3;
inline bool PluginInfo::has_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PluginInfo::set_has_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PluginInfo::clear_has_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PluginInfo::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool PluginInfo::active() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginInfo.active)
  return active_;
}
inline void PluginInfo::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginInfo.active)
}

// optional bool enabled = 4;
inline bool PluginInfo::has_enabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PluginInfo::set_has_enabled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PluginInfo::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PluginInfo::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool PluginInfo::enabled() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginInfo.enabled)
  return enabled_;
}
inline void PluginInfo::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginInfo.enabled)
}

// -------------------------------------------------------------------

// PluginListReply

// repeated .ola.proto.PluginInfo plugin = 1;
inline int PluginListReply::plugin_size() const {
  return plugin_.size();
}
inline void PluginListReply::clear_plugin() {
  plugin_.Clear();
}
inline const ::ola::proto::PluginInfo& PluginListReply::plugin(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginListReply.plugin)
  return plugin_.Get(index);
}
inline ::ola::proto::PluginInfo* PluginListReply::mutable_plugin(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginListReply.plugin)
  return plugin_.Mutable(index);
}
inline ::ola::proto::PluginInfo* PluginListReply::add_plugin() {
  // @@protoc_insertion_point(field_add:ola.proto.PluginListReply.plugin)
  return plugin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >&
PluginListReply::plugin() const {
  // @@protoc_insertion_point(field_list:ola.proto.PluginListReply.plugin)
  return plugin_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >*
PluginListReply::mutable_plugin() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.PluginListReply.plugin)
  return &plugin_;
}

// -------------------------------------------------------------------

// PluginDescriptionRequest

// required int32 plugin_id = 1;
inline bool PluginDescriptionRequest::has_plugin_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginDescriptionRequest::set_has_plugin_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginDescriptionRequest::clear_has_plugin_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginDescriptionRequest::clear_plugin_id() {
  plugin_id_ = 0;
  clear_has_plugin_id();
}
inline ::google::protobuf::int32 PluginDescriptionRequest::plugin_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginDescriptionRequest.plugin_id)
  return plugin_id_;
}
inline void PluginDescriptionRequest::set_plugin_id(::google::protobuf::int32 value) {
  set_has_plugin_id();
  plugin_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginDescriptionRequest.plugin_id)
}

// -------------------------------------------------------------------

// PluginDescriptionReply

// required string name = 1;
inline bool PluginDescriptionReply::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginDescriptionReply::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginDescriptionReply::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginDescriptionReply::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PluginDescriptionReply::name() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginDescriptionReply.name)
  return *name_;
}
inline void PluginDescriptionReply::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.PluginDescriptionReply.name)
}
inline void PluginDescriptionReply::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.PluginDescriptionReply.name)
}
inline void PluginDescriptionReply::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.PluginDescriptionReply.name)
}
inline ::std::string* PluginDescriptionReply::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginDescriptionReply.name)
  return name_;
}
inline ::std::string* PluginDescriptionReply::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PluginDescriptionReply::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.PluginDescriptionReply.name)
}

// required string description = 2;
inline bool PluginDescriptionReply::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PluginDescriptionReply::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PluginDescriptionReply::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PluginDescriptionReply::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& PluginDescriptionReply::description() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginDescriptionReply.description)
  return *description_;
}
inline void PluginDescriptionReply::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.PluginDescriptionReply.description)
}
inline void PluginDescriptionReply::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.PluginDescriptionReply.description)
}
inline void PluginDescriptionReply::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.PluginDescriptionReply.description)
}
inline ::std::string* PluginDescriptionReply::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginDescriptionReply.description)
  return description_;
}
inline ::std::string* PluginDescriptionReply::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PluginDescriptionReply::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.PluginDescriptionReply.description)
}

// -------------------------------------------------------------------

// PluginStateRequest

// required int32 plugin_id = 1;
inline bool PluginStateRequest::has_plugin_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginStateRequest::set_has_plugin_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginStateRequest::clear_has_plugin_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginStateRequest::clear_plugin_id() {
  plugin_id_ = 0;
  clear_has_plugin_id();
}
inline ::google::protobuf::int32 PluginStateRequest::plugin_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateRequest.plugin_id)
  return plugin_id_;
}
inline void PluginStateRequest::set_plugin_id(::google::protobuf::int32 value) {
  set_has_plugin_id();
  plugin_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateRequest.plugin_id)
}

// -------------------------------------------------------------------

// PluginStateReply

// required string name = 1;
inline bool PluginStateReply::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginStateReply::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginStateReply::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginStateReply::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PluginStateReply::name() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateReply.name)
  return *name_;
}
inline void PluginStateReply::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateReply.name)
}
inline void PluginStateReply::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.PluginStateReply.name)
}
inline void PluginStateReply::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.PluginStateReply.name)
}
inline ::std::string* PluginStateReply::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginStateReply.name)
  return name_;
}
inline ::std::string* PluginStateReply::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PluginStateReply::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.PluginStateReply.name)
}

// required bool enabled = 2;
inline bool PluginStateReply::has_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PluginStateReply::set_has_enabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PluginStateReply::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PluginStateReply::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool PluginStateReply::enabled() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateReply.enabled)
  return enabled_;
}
inline void PluginStateReply::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateReply.enabled)
}

// required bool active = 3;
inline bool PluginStateReply::has_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PluginStateReply::set_has_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PluginStateReply::clear_has_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PluginStateReply::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool PluginStateReply::active() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateReply.active)
  return active_;
}
inline void PluginStateReply::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateReply.active)
}

// required string preferences_source = 4;
inline bool PluginStateReply::has_preferences_source() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PluginStateReply::set_has_preferences_source() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PluginStateReply::clear_has_preferences_source() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PluginStateReply::clear_preferences_source() {
  if (preferences_source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferences_source_->clear();
  }
  clear_has_preferences_source();
}
inline const ::std::string& PluginStateReply::preferences_source() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateReply.preferences_source)
  return *preferences_source_;
}
inline void PluginStateReply::set_preferences_source(const ::std::string& value) {
  set_has_preferences_source();
  if (preferences_source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferences_source_ = new ::std::string;
  }
  preferences_source_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateReply.preferences_source)
}
inline void PluginStateReply::set_preferences_source(const char* value) {
  set_has_preferences_source();
  if (preferences_source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferences_source_ = new ::std::string;
  }
  preferences_source_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.PluginStateReply.preferences_source)
}
inline void PluginStateReply::set_preferences_source(const char* value, size_t size) {
  set_has_preferences_source();
  if (preferences_source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferences_source_ = new ::std::string;
  }
  preferences_source_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.PluginStateReply.preferences_source)
}
inline ::std::string* PluginStateReply::mutable_preferences_source() {
  set_has_preferences_source();
  if (preferences_source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    preferences_source_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginStateReply.preferences_source)
  return preferences_source_;
}
inline ::std::string* PluginStateReply::release_preferences_source() {
  clear_has_preferences_source();
  if (preferences_source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = preferences_source_;
    preferences_source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PluginStateReply::set_allocated_preferences_source(::std::string* preferences_source) {
  if (preferences_source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete preferences_source_;
  }
  if (preferences_source) {
    set_has_preferences_source();
    preferences_source_ = preferences_source;
  } else {
    clear_has_preferences_source();
    preferences_source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.PluginStateReply.preferences_source)
}

// repeated .ola.proto.PluginInfo conflicts_with = 5;
inline int PluginStateReply::conflicts_with_size() const {
  return conflicts_with_.size();
}
inline void PluginStateReply::clear_conflicts_with() {
  conflicts_with_.Clear();
}
inline const ::ola::proto::PluginInfo& PluginStateReply::conflicts_with(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateReply.conflicts_with)
  return conflicts_with_.Get(index);
}
inline ::ola::proto::PluginInfo* PluginStateReply::mutable_conflicts_with(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.PluginStateReply.conflicts_with)
  return conflicts_with_.Mutable(index);
}
inline ::ola::proto::PluginInfo* PluginStateReply::add_conflicts_with() {
  // @@protoc_insertion_point(field_add:ola.proto.PluginStateReply.conflicts_with)
  return conflicts_with_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >&
PluginStateReply::conflicts_with() const {
  // @@protoc_insertion_point(field_list:ola.proto.PluginStateReply.conflicts_with)
  return conflicts_with_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PluginInfo >*
PluginStateReply::mutable_conflicts_with() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.PluginStateReply.conflicts_with)
  return &conflicts_with_;
}

// -------------------------------------------------------------------

// PluginStateChangeRequest

// required int32 plugin_id = 1;
inline bool PluginStateChangeRequest::has_plugin_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PluginStateChangeRequest::set_has_plugin_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PluginStateChangeRequest::clear_has_plugin_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PluginStateChangeRequest::clear_plugin_id() {
  plugin_id_ = 0;
  clear_has_plugin_id();
}
inline ::google::protobuf::int32 PluginStateChangeRequest::plugin_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateChangeRequest.plugin_id)
  return plugin_id_;
}
inline void PluginStateChangeRequest::set_plugin_id(::google::protobuf::int32 value) {
  set_has_plugin_id();
  plugin_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateChangeRequest.plugin_id)
}

// required bool enabled = 2;
inline bool PluginStateChangeRequest::has_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PluginStateChangeRequest::set_has_enabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PluginStateChangeRequest::clear_has_enabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PluginStateChangeRequest::clear_enabled() {
  enabled_ = false;
  clear_has_enabled();
}
inline bool PluginStateChangeRequest::enabled() const {
  // @@protoc_insertion_point(field_get:ola.proto.PluginStateChangeRequest.enabled)
  return enabled_;
}
inline void PluginStateChangeRequest::set_enabled(bool value) {
  set_has_enabled();
  enabled_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PluginStateChangeRequest.enabled)
}

// -------------------------------------------------------------------

// DeviceInfoRequest

// optional int32 plugin_id = 1;
inline bool DeviceInfoRequest::has_plugin_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceInfoRequest::set_has_plugin_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceInfoRequest::clear_has_plugin_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceInfoRequest::clear_plugin_id() {
  plugin_id_ = 0;
  clear_has_plugin_id();
}
inline ::google::protobuf::int32 DeviceInfoRequest::plugin_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfoRequest.plugin_id)
  return plugin_id_;
}
inline void DeviceInfoRequest::set_plugin_id(::google::protobuf::int32 value) {
  set_has_plugin_id();
  plugin_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DeviceInfoRequest.plugin_id)
}

// -------------------------------------------------------------------

// PortInfo

// required int32 port_id = 1;
inline bool PortInfo::has_port_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PortInfo::set_has_port_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PortInfo::clear_has_port_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PortInfo::clear_port_id() {
  port_id_ = 0;
  clear_has_port_id();
}
inline ::google::protobuf::int32 PortInfo::port_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.port_id)
  return port_id_;
}
inline void PortInfo::set_port_id(::google::protobuf::int32 value) {
  set_has_port_id();
  port_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.port_id)
}

// required int32 priority_capability = 2;
inline bool PortInfo::has_priority_capability() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PortInfo::set_has_priority_capability() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PortInfo::clear_has_priority_capability() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PortInfo::clear_priority_capability() {
  priority_capability_ = 0;
  clear_has_priority_capability();
}
inline ::google::protobuf::int32 PortInfo::priority_capability() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.priority_capability)
  return priority_capability_;
}
inline void PortInfo::set_priority_capability(::google::protobuf::int32 value) {
  set_has_priority_capability();
  priority_capability_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.priority_capability)
}

// required string description = 5;
inline bool PortInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PortInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PortInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PortInfo::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& PortInfo::description() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.description)
  return *description_;
}
inline void PortInfo::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.description)
}
inline void PortInfo::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.PortInfo.description)
}
inline void PortInfo::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.PortInfo.description)
}
inline ::std::string* PortInfo::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.PortInfo.description)
  return description_;
}
inline ::std::string* PortInfo::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PortInfo::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.PortInfo.description)
}

// optional int32 universe = 3;
inline bool PortInfo::has_universe() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PortInfo::set_has_universe() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PortInfo::clear_has_universe() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PortInfo::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 PortInfo::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.universe)
  return universe_;
}
inline void PortInfo::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.universe)
}

// optional bool active = 4;
inline bool PortInfo::has_active() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PortInfo::set_has_active() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PortInfo::clear_has_active() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PortInfo::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool PortInfo::active() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.active)
  return active_;
}
inline void PortInfo::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.active)
}

// optional int32 priority_mode = 6;
inline bool PortInfo::has_priority_mode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PortInfo::set_has_priority_mode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PortInfo::clear_has_priority_mode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PortInfo::clear_priority_mode() {
  priority_mode_ = 0;
  clear_has_priority_mode();
}
inline ::google::protobuf::int32 PortInfo::priority_mode() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.priority_mode)
  return priority_mode_;
}
inline void PortInfo::set_priority_mode(::google::protobuf::int32 value) {
  set_has_priority_mode();
  priority_mode_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.priority_mode)
}

// optional int32 priority = 7;
inline bool PortInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PortInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PortInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PortInfo::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 PortInfo::priority() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.priority)
  return priority_;
}
inline void PortInfo::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.priority)
}

// optional bool supports_rdm = 8 [default = false];
inline bool PortInfo::has_supports_rdm() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PortInfo::set_has_supports_rdm() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PortInfo::clear_has_supports_rdm() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PortInfo::clear_supports_rdm() {
  supports_rdm_ = false;
  clear_has_supports_rdm();
}
inline bool PortInfo::supports_rdm() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortInfo.supports_rdm)
  return supports_rdm_;
}
inline void PortInfo::set_supports_rdm(bool value) {
  set_has_supports_rdm();
  supports_rdm_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortInfo.supports_rdm)
}

// -------------------------------------------------------------------

// DeviceInfo

// required int32 device_alias = 1;
inline bool DeviceInfo::has_device_alias() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceInfo::set_has_device_alias() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceInfo::clear_has_device_alias() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceInfo::clear_device_alias() {
  device_alias_ = 0;
  clear_has_device_alias();
}
inline ::google::protobuf::int32 DeviceInfo::device_alias() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfo.device_alias)
  return device_alias_;
}
inline void DeviceInfo::set_device_alias(::google::protobuf::int32 value) {
  set_has_device_alias();
  device_alias_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DeviceInfo.device_alias)
}

// required int32 plugin_id = 2;
inline bool DeviceInfo::has_plugin_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceInfo::set_has_plugin_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceInfo::clear_has_plugin_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceInfo::clear_plugin_id() {
  plugin_id_ = 0;
  clear_has_plugin_id();
}
inline ::google::protobuf::int32 DeviceInfo::plugin_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfo.plugin_id)
  return plugin_id_;
}
inline void DeviceInfo::set_plugin_id(::google::protobuf::int32 value) {
  set_has_plugin_id();
  plugin_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DeviceInfo.plugin_id)
}

// required string device_name = 3;
inline bool DeviceInfo::has_device_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeviceInfo::set_has_device_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeviceInfo::clear_has_device_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeviceInfo::clear_device_name() {
  if (device_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_name_->clear();
  }
  clear_has_device_name();
}
inline const ::std::string& DeviceInfo::device_name() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfo.device_name)
  return *device_name_;
}
inline void DeviceInfo::set_device_name(const ::std::string& value) {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_name_ = new ::std::string;
  }
  device_name_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.DeviceInfo.device_name)
}
inline void DeviceInfo::set_device_name(const char* value) {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_name_ = new ::std::string;
  }
  device_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.DeviceInfo.device_name)
}
inline void DeviceInfo::set_device_name(const char* value, size_t size) {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_name_ = new ::std::string;
  }
  device_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.DeviceInfo.device_name)
}
inline ::std::string* DeviceInfo::mutable_device_name() {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceInfo.device_name)
  return device_name_;
}
inline ::std::string* DeviceInfo::release_device_name() {
  clear_has_device_name();
  if (device_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = device_name_;
    device_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeviceInfo::set_allocated_device_name(::std::string* device_name) {
  if (device_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete device_name_;
  }
  if (device_name) {
    set_has_device_name();
    device_name_ = device_name;
  } else {
    clear_has_device_name();
    device_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.DeviceInfo.device_name)
}

// repeated .ola.proto.PortInfo input_port = 4;
inline int DeviceInfo::input_port_size() const {
  return input_port_.size();
}
inline void DeviceInfo::clear_input_port() {
  input_port_.Clear();
}
inline const ::ola::proto::PortInfo& DeviceInfo::input_port(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfo.input_port)
  return input_port_.Get(index);
}
inline ::ola::proto::PortInfo* DeviceInfo::mutable_input_port(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceInfo.input_port)
  return input_port_.Mutable(index);
}
inline ::ola::proto::PortInfo* DeviceInfo::add_input_port() {
  // @@protoc_insertion_point(field_add:ola.proto.DeviceInfo.input_port)
  return input_port_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
DeviceInfo::input_port() const {
  // @@protoc_insertion_point(field_list:ola.proto.DeviceInfo.input_port)
  return input_port_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
DeviceInfo::mutable_input_port() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.DeviceInfo.input_port)
  return &input_port_;
}

// repeated .ola.proto.PortInfo output_port = 5;
inline int DeviceInfo::output_port_size() const {
  return output_port_.size();
}
inline void DeviceInfo::clear_output_port() {
  output_port_.Clear();
}
inline const ::ola::proto::PortInfo& DeviceInfo::output_port(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfo.output_port)
  return output_port_.Get(index);
}
inline ::ola::proto::PortInfo* DeviceInfo::mutable_output_port(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceInfo.output_port)
  return output_port_.Mutable(index);
}
inline ::ola::proto::PortInfo* DeviceInfo::add_output_port() {
  // @@protoc_insertion_point(field_add:ola.proto.DeviceInfo.output_port)
  return output_port_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
DeviceInfo::output_port() const {
  // @@protoc_insertion_point(field_list:ola.proto.DeviceInfo.output_port)
  return output_port_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
DeviceInfo::mutable_output_port() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.DeviceInfo.output_port)
  return &output_port_;
}

// required string device_id = 6;
inline bool DeviceInfo::has_device_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DeviceInfo::set_has_device_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DeviceInfo::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DeviceInfo::clear_device_id() {
  if (device_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_->clear();
  }
  clear_has_device_id();
}
inline const ::std::string& DeviceInfo::device_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfo.device_id)
  return *device_id_;
}
inline void DeviceInfo::set_device_id(const ::std::string& value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.DeviceInfo.device_id)
}
inline void DeviceInfo::set_device_id(const char* value) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.DeviceInfo.device_id)
}
inline void DeviceInfo::set_device_id(const char* value, size_t size) {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  device_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.DeviceInfo.device_id)
}
inline ::std::string* DeviceInfo::mutable_device_id() {
  set_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    device_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceInfo.device_id)
  return device_id_;
}
inline ::std::string* DeviceInfo::release_device_id() {
  clear_has_device_id();
  if (device_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = device_id_;
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeviceInfo::set_allocated_device_id(::std::string* device_id) {
  if (device_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete device_id_;
  }
  if (device_id) {
    set_has_device_id();
    device_id_ = device_id;
  } else {
    clear_has_device_id();
    device_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.DeviceInfo.device_id)
}

// -------------------------------------------------------------------

// DeviceInfoReply

// repeated .ola.proto.DeviceInfo device = 1;
inline int DeviceInfoReply::device_size() const {
  return device_.size();
}
inline void DeviceInfoReply::clear_device() {
  device_.Clear();
}
inline const ::ola::proto::DeviceInfo& DeviceInfoReply::device(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceInfoReply.device)
  return device_.Get(index);
}
inline ::ola::proto::DeviceInfo* DeviceInfoReply::mutable_device(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceInfoReply.device)
  return device_.Mutable(index);
}
inline ::ola::proto::DeviceInfo* DeviceInfoReply::add_device() {
  // @@protoc_insertion_point(field_add:ola.proto.DeviceInfoReply.device)
  return device_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::DeviceInfo >&
DeviceInfoReply::device() const {
  // @@protoc_insertion_point(field_list:ola.proto.DeviceInfoReply.device)
  return device_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::DeviceInfo >*
DeviceInfoReply::mutable_device() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.DeviceInfoReply.device)
  return &device_;
}

// -------------------------------------------------------------------

// DmxData

// required int32 universe = 1;
inline bool DmxData::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DmxData::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DmxData::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DmxData::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 DmxData::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.DmxData.universe)
  return universe_;
}
inline void DmxData::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DmxData.universe)
}

// required bytes data = 2;
inline bool DmxData::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DmxData::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DmxData::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DmxData::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DmxData::data() const {
  // @@protoc_insertion_point(field_get:ola.proto.DmxData.data)
  return *data_;
}
inline void DmxData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.DmxData.data)
}
inline void DmxData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.DmxData.data)
}
inline void DmxData::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.DmxData.data)
}
inline ::std::string* DmxData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.DmxData.data)
  return data_;
}
inline ::std::string* DmxData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DmxData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.DmxData.data)
}

// optional int32 priority = 3;
inline bool DmxData::has_priority() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DmxData::set_has_priority() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DmxData::clear_has_priority() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DmxData::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 DmxData::priority() const {
  // @@protoc_insertion_point(field_get:ola.proto.DmxData.priority)
  return priority_;
}
inline void DmxData::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DmxData.priority)
}

// -------------------------------------------------------------------

// RegisterDmxRequest

// required int32 universe = 1;
inline bool RegisterDmxRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterDmxRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterDmxRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterDmxRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 RegisterDmxRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.RegisterDmxRequest.universe)
  return universe_;
}
inline void RegisterDmxRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RegisterDmxRequest.universe)
}

// required .ola.proto.RegisterAction action = 2;
inline bool RegisterDmxRequest::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterDmxRequest::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterDmxRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterDmxRequest::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::ola::proto::RegisterAction RegisterDmxRequest::action() const {
  // @@protoc_insertion_point(field_get:ola.proto.RegisterDmxRequest.action)
  return static_cast< ::ola::proto::RegisterAction >(action_);
}
inline void RegisterDmxRequest::set_action(::ola::proto::RegisterAction value) {
  assert(::ola::proto::RegisterAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RegisterDmxRequest.action)
}

// -------------------------------------------------------------------

// PatchPortRequest

// required int32 universe = 1;
inline bool PatchPortRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PatchPortRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PatchPortRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PatchPortRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 PatchPortRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.PatchPortRequest.universe)
  return universe_;
}
inline void PatchPortRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PatchPortRequest.universe)
}

// required int32 device_alias = 2;
inline bool PatchPortRequest::has_device_alias() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PatchPortRequest::set_has_device_alias() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PatchPortRequest::clear_has_device_alias() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PatchPortRequest::clear_device_alias() {
  device_alias_ = 0;
  clear_has_device_alias();
}
inline ::google::protobuf::int32 PatchPortRequest::device_alias() const {
  // @@protoc_insertion_point(field_get:ola.proto.PatchPortRequest.device_alias)
  return device_alias_;
}
inline void PatchPortRequest::set_device_alias(::google::protobuf::int32 value) {
  set_has_device_alias();
  device_alias_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PatchPortRequest.device_alias)
}

// required int32 port_id = 3;
inline bool PatchPortRequest::has_port_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PatchPortRequest::set_has_port_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PatchPortRequest::clear_has_port_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PatchPortRequest::clear_port_id() {
  port_id_ = 0;
  clear_has_port_id();
}
inline ::google::protobuf::int32 PatchPortRequest::port_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PatchPortRequest.port_id)
  return port_id_;
}
inline void PatchPortRequest::set_port_id(::google::protobuf::int32 value) {
  set_has_port_id();
  port_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PatchPortRequest.port_id)
}

// required .ola.proto.PatchAction action = 4;
inline bool PatchPortRequest::has_action() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PatchPortRequest::set_has_action() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PatchPortRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PatchPortRequest::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::ola::proto::PatchAction PatchPortRequest::action() const {
  // @@protoc_insertion_point(field_get:ola.proto.PatchPortRequest.action)
  return static_cast< ::ola::proto::PatchAction >(action_);
}
inline void PatchPortRequest::set_action(::ola::proto::PatchAction value) {
  assert(::ola::proto::PatchAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PatchPortRequest.action)
}

// required bool is_output = 5;
inline bool PatchPortRequest::has_is_output() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PatchPortRequest::set_has_is_output() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PatchPortRequest::clear_has_is_output() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PatchPortRequest::clear_is_output() {
  is_output_ = false;
  clear_has_is_output();
}
inline bool PatchPortRequest::is_output() const {
  // @@protoc_insertion_point(field_get:ola.proto.PatchPortRequest.is_output)
  return is_output_;
}
inline void PatchPortRequest::set_is_output(bool value) {
  set_has_is_output();
  is_output_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PatchPortRequest.is_output)
}

// -------------------------------------------------------------------

// UniverseNameRequest

// required int32 universe = 1;
inline bool UniverseNameRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniverseNameRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UniverseNameRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UniverseNameRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 UniverseNameRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseNameRequest.universe)
  return universe_;
}
inline void UniverseNameRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseNameRequest.universe)
}

// required string name = 2;
inline bool UniverseNameRequest::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UniverseNameRequest::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UniverseNameRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UniverseNameRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UniverseNameRequest::name() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseNameRequest.name)
  return *name_;
}
inline void UniverseNameRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.UniverseNameRequest.name)
}
inline void UniverseNameRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.UniverseNameRequest.name)
}
inline void UniverseNameRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.UniverseNameRequest.name)
}
inline ::std::string* UniverseNameRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.UniverseNameRequest.name)
  return name_;
}
inline ::std::string* UniverseNameRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UniverseNameRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.UniverseNameRequest.name)
}

// -------------------------------------------------------------------

// MergeModeRequest

// required int32 universe = 1;
inline bool MergeModeRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MergeModeRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MergeModeRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MergeModeRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 MergeModeRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.MergeModeRequest.universe)
  return universe_;
}
inline void MergeModeRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.MergeModeRequest.universe)
}

// required .ola.proto.MergeMode merge_mode = 2;
inline bool MergeModeRequest::has_merge_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MergeModeRequest::set_has_merge_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MergeModeRequest::clear_has_merge_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MergeModeRequest::clear_merge_mode() {
  merge_mode_ = 1;
  clear_has_merge_mode();
}
inline ::ola::proto::MergeMode MergeModeRequest::merge_mode() const {
  // @@protoc_insertion_point(field_get:ola.proto.MergeModeRequest.merge_mode)
  return static_cast< ::ola::proto::MergeMode >(merge_mode_);
}
inline void MergeModeRequest::set_merge_mode(::ola::proto::MergeMode value) {
  assert(::ola::proto::MergeMode_IsValid(value));
  set_has_merge_mode();
  merge_mode_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.MergeModeRequest.merge_mode)
}

// -------------------------------------------------------------------

// OptionalUniverseRequest

// optional int32 universe = 1;
inline bool OptionalUniverseRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OptionalUniverseRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OptionalUniverseRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OptionalUniverseRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 OptionalUniverseRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.OptionalUniverseRequest.universe)
  return universe_;
}
inline void OptionalUniverseRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.OptionalUniverseRequest.universe)
}

// -------------------------------------------------------------------

// UniverseInfo

// required int32 universe = 1;
inline bool UniverseInfo::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniverseInfo::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UniverseInfo::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UniverseInfo::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 UniverseInfo::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.universe)
  return universe_;
}
inline void UniverseInfo::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseInfo.universe)
}

// required string name = 2;
inline bool UniverseInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UniverseInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UniverseInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UniverseInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UniverseInfo::name() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.name)
  return *name_;
}
inline void UniverseInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.UniverseInfo.name)
}
inline void UniverseInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.UniverseInfo.name)
}
inline void UniverseInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.UniverseInfo.name)
}
inline ::std::string* UniverseInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.UniverseInfo.name)
  return name_;
}
inline ::std::string* UniverseInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UniverseInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.UniverseInfo.name)
}

// required .ola.proto.MergeMode merge_mode = 3;
inline bool UniverseInfo::has_merge_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UniverseInfo::set_has_merge_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UniverseInfo::clear_has_merge_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UniverseInfo::clear_merge_mode() {
  merge_mode_ = 1;
  clear_has_merge_mode();
}
inline ::ola::proto::MergeMode UniverseInfo::merge_mode() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.merge_mode)
  return static_cast< ::ola::proto::MergeMode >(merge_mode_);
}
inline void UniverseInfo::set_merge_mode(::ola::proto::MergeMode value) {
  assert(::ola::proto::MergeMode_IsValid(value));
  set_has_merge_mode();
  merge_mode_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseInfo.merge_mode)
}

// required int32 input_port_count = 4;
inline bool UniverseInfo::has_input_port_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UniverseInfo::set_has_input_port_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UniverseInfo::clear_has_input_port_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UniverseInfo::clear_input_port_count() {
  input_port_count_ = 0;
  clear_has_input_port_count();
}
inline ::google::protobuf::int32 UniverseInfo::input_port_count() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.input_port_count)
  return input_port_count_;
}
inline void UniverseInfo::set_input_port_count(::google::protobuf::int32 value) {
  set_has_input_port_count();
  input_port_count_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseInfo.input_port_count)
}

// required int32 output_port_count = 5;
inline bool UniverseInfo::has_output_port_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UniverseInfo::set_has_output_port_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UniverseInfo::clear_has_output_port_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UniverseInfo::clear_output_port_count() {
  output_port_count_ = 0;
  clear_has_output_port_count();
}
inline ::google::protobuf::int32 UniverseInfo::output_port_count() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.output_port_count)
  return output_port_count_;
}
inline void UniverseInfo::set_output_port_count(::google::protobuf::int32 value) {
  set_has_output_port_count();
  output_port_count_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseInfo.output_port_count)
}

// required int32 rdm_devices = 6;
inline bool UniverseInfo::has_rdm_devices() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UniverseInfo::set_has_rdm_devices() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UniverseInfo::clear_has_rdm_devices() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UniverseInfo::clear_rdm_devices() {
  rdm_devices_ = 0;
  clear_has_rdm_devices();
}
inline ::google::protobuf::int32 UniverseInfo::rdm_devices() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.rdm_devices)
  return rdm_devices_;
}
inline void UniverseInfo::set_rdm_devices(::google::protobuf::int32 value) {
  set_has_rdm_devices();
  rdm_devices_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseInfo.rdm_devices)
}

// repeated .ola.proto.PortInfo input_ports = 7;
inline int UniverseInfo::input_ports_size() const {
  return input_ports_.size();
}
inline void UniverseInfo::clear_input_ports() {
  input_ports_.Clear();
}
inline const ::ola::proto::PortInfo& UniverseInfo::input_ports(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.input_ports)
  return input_ports_.Get(index);
}
inline ::ola::proto::PortInfo* UniverseInfo::mutable_input_ports(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.UniverseInfo.input_ports)
  return input_ports_.Mutable(index);
}
inline ::ola::proto::PortInfo* UniverseInfo::add_input_ports() {
  // @@protoc_insertion_point(field_add:ola.proto.UniverseInfo.input_ports)
  return input_ports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
UniverseInfo::input_ports() const {
  // @@protoc_insertion_point(field_list:ola.proto.UniverseInfo.input_ports)
  return input_ports_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
UniverseInfo::mutable_input_ports() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.UniverseInfo.input_ports)
  return &input_ports_;
}

// repeated .ola.proto.PortInfo output_ports = 8;
inline int UniverseInfo::output_ports_size() const {
  return output_ports_.size();
}
inline void UniverseInfo::clear_output_ports() {
  output_ports_.Clear();
}
inline const ::ola::proto::PortInfo& UniverseInfo::output_ports(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfo.output_ports)
  return output_ports_.Get(index);
}
inline ::ola::proto::PortInfo* UniverseInfo::mutable_output_ports(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.UniverseInfo.output_ports)
  return output_ports_.Mutable(index);
}
inline ::ola::proto::PortInfo* UniverseInfo::add_output_ports() {
  // @@protoc_insertion_point(field_add:ola.proto.UniverseInfo.output_ports)
  return output_ports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >&
UniverseInfo::output_ports() const {
  // @@protoc_insertion_point(field_list:ola.proto.UniverseInfo.output_ports)
  return output_ports_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::PortInfo >*
UniverseInfo::mutable_output_ports() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.UniverseInfo.output_ports)
  return &output_ports_;
}

// -------------------------------------------------------------------

// UniverseInfoReply

// repeated .ola.proto.UniverseInfo universe = 1;
inline int UniverseInfoReply::universe_size() const {
  return universe_.size();
}
inline void UniverseInfoReply::clear_universe() {
  universe_.Clear();
}
inline const ::ola::proto::UniverseInfo& UniverseInfoReply::universe(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseInfoReply.universe)
  return universe_.Get(index);
}
inline ::ola::proto::UniverseInfo* UniverseInfoReply::mutable_universe(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.UniverseInfoReply.universe)
  return universe_.Mutable(index);
}
inline ::ola::proto::UniverseInfo* UniverseInfoReply::add_universe() {
  // @@protoc_insertion_point(field_add:ola.proto.UniverseInfoReply.universe)
  return universe_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::UniverseInfo >&
UniverseInfoReply::universe() const {
  // @@protoc_insertion_point(field_list:ola.proto.UniverseInfoReply.universe)
  return universe_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::UniverseInfo >*
UniverseInfoReply::mutable_universe() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.UniverseInfoReply.universe)
  return &universe_;
}

// -------------------------------------------------------------------

// PortPriorityRequest

// required int32 device_alias = 1;
inline bool PortPriorityRequest::has_device_alias() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PortPriorityRequest::set_has_device_alias() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PortPriorityRequest::clear_has_device_alias() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PortPriorityRequest::clear_device_alias() {
  device_alias_ = 0;
  clear_has_device_alias();
}
inline ::google::protobuf::int32 PortPriorityRequest::device_alias() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortPriorityRequest.device_alias)
  return device_alias_;
}
inline void PortPriorityRequest::set_device_alias(::google::protobuf::int32 value) {
  set_has_device_alias();
  device_alias_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortPriorityRequest.device_alias)
}

// required bool is_output = 2;
inline bool PortPriorityRequest::has_is_output() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PortPriorityRequest::set_has_is_output() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PortPriorityRequest::clear_has_is_output() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PortPriorityRequest::clear_is_output() {
  is_output_ = false;
  clear_has_is_output();
}
inline bool PortPriorityRequest::is_output() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortPriorityRequest.is_output)
  return is_output_;
}
inline void PortPriorityRequest::set_is_output(bool value) {
  set_has_is_output();
  is_output_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortPriorityRequest.is_output)
}

// required int32 port_id = 3;
inline bool PortPriorityRequest::has_port_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PortPriorityRequest::set_has_port_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PortPriorityRequest::clear_has_port_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PortPriorityRequest::clear_port_id() {
  port_id_ = 0;
  clear_has_port_id();
}
inline ::google::protobuf::int32 PortPriorityRequest::port_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortPriorityRequest.port_id)
  return port_id_;
}
inline void PortPriorityRequest::set_port_id(::google::protobuf::int32 value) {
  set_has_port_id();
  port_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortPriorityRequest.port_id)
}

// required int32 priority_mode = 4;
inline bool PortPriorityRequest::has_priority_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PortPriorityRequest::set_has_priority_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PortPriorityRequest::clear_has_priority_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PortPriorityRequest::clear_priority_mode() {
  priority_mode_ = 0;
  clear_has_priority_mode();
}
inline ::google::protobuf::int32 PortPriorityRequest::priority_mode() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortPriorityRequest.priority_mode)
  return priority_mode_;
}
inline void PortPriorityRequest::set_priority_mode(::google::protobuf::int32 value) {
  set_has_priority_mode();
  priority_mode_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortPriorityRequest.priority_mode)
}

// optional int32 priority = 5;
inline bool PortPriorityRequest::has_priority() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PortPriorityRequest::set_has_priority() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PortPriorityRequest::clear_has_priority() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PortPriorityRequest::clear_priority() {
  priority_ = 0;
  clear_has_priority();
}
inline ::google::protobuf::int32 PortPriorityRequest::priority() const {
  // @@protoc_insertion_point(field_get:ola.proto.PortPriorityRequest.priority)
  return priority_;
}
inline void PortPriorityRequest::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.PortPriorityRequest.priority)
}

// -------------------------------------------------------------------

// DeviceConfigRequest

// required int32 device_alias = 1;
inline bool DeviceConfigRequest::has_device_alias() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceConfigRequest::set_has_device_alias() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceConfigRequest::clear_has_device_alias() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceConfigRequest::clear_device_alias() {
  device_alias_ = 0;
  clear_has_device_alias();
}
inline ::google::protobuf::int32 DeviceConfigRequest::device_alias() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceConfigRequest.device_alias)
  return device_alias_;
}
inline void DeviceConfigRequest::set_device_alias(::google::protobuf::int32 value) {
  set_has_device_alias();
  device_alias_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DeviceConfigRequest.device_alias)
}

// required bytes data = 2;
inline bool DeviceConfigRequest::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceConfigRequest::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceConfigRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceConfigRequest::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DeviceConfigRequest::data() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceConfigRequest.data)
  return *data_;
}
inline void DeviceConfigRequest::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.DeviceConfigRequest.data)
}
inline void DeviceConfigRequest::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.DeviceConfigRequest.data)
}
inline void DeviceConfigRequest::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.DeviceConfigRequest.data)
}
inline ::std::string* DeviceConfigRequest::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceConfigRequest.data)
  return data_;
}
inline ::std::string* DeviceConfigRequest::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeviceConfigRequest::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.DeviceConfigRequest.data)
}

// -------------------------------------------------------------------

// DeviceConfigReply

// required bytes data = 1;
inline bool DeviceConfigReply::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceConfigReply::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceConfigReply::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceConfigReply::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DeviceConfigReply::data() const {
  // @@protoc_insertion_point(field_get:ola.proto.DeviceConfigReply.data)
  return *data_;
}
inline void DeviceConfigReply::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.DeviceConfigReply.data)
}
inline void DeviceConfigReply::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.DeviceConfigReply.data)
}
inline void DeviceConfigReply::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.DeviceConfigReply.data)
}
inline ::std::string* DeviceConfigReply::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.DeviceConfigReply.data)
  return data_;
}
inline ::std::string* DeviceConfigReply::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeviceConfigReply::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.DeviceConfigReply.data)
}

// -------------------------------------------------------------------

// UID

// required int32 esta_id = 1;
inline bool UID::has_esta_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UID::set_has_esta_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UID::clear_has_esta_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UID::clear_esta_id() {
  esta_id_ = 0;
  clear_has_esta_id();
}
inline ::google::protobuf::int32 UID::esta_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.UID.esta_id)
  return esta_id_;
}
inline void UID::set_esta_id(::google::protobuf::int32 value) {
  set_has_esta_id();
  esta_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UID.esta_id)
}

// required fixed32 device_id = 2;
inline bool UID::has_device_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UID::set_has_device_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UID::clear_has_device_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UID::clear_device_id() {
  device_id_ = 0u;
  clear_has_device_id();
}
inline ::google::protobuf::uint32 UID::device_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.UID.device_id)
  return device_id_;
}
inline void UID::set_device_id(::google::protobuf::uint32 value) {
  set_has_device_id();
  device_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UID.device_id)
}

// -------------------------------------------------------------------

// UniverseRequest

// required int32 universe = 1;
inline bool UniverseRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniverseRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UniverseRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UniverseRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 UniverseRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.UniverseRequest.universe)
  return universe_;
}
inline void UniverseRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UniverseRequest.universe)
}

// -------------------------------------------------------------------

// DiscoveryRequest

// required int32 universe = 1;
inline bool DiscoveryRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DiscoveryRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DiscoveryRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DiscoveryRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 DiscoveryRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.DiscoveryRequest.universe)
  return universe_;
}
inline void DiscoveryRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DiscoveryRequest.universe)
}

// required bool full = 2;
inline bool DiscoveryRequest::has_full() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DiscoveryRequest::set_has_full() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DiscoveryRequest::clear_has_full() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DiscoveryRequest::clear_full() {
  full_ = false;
  clear_has_full();
}
inline bool DiscoveryRequest::full() const {
  // @@protoc_insertion_point(field_get:ola.proto.DiscoveryRequest.full)
  return full_;
}
inline void DiscoveryRequest::set_full(bool value) {
  set_has_full();
  full_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.DiscoveryRequest.full)
}

// -------------------------------------------------------------------

// UIDListReply

// required int32 universe = 1;
inline bool UIDListReply::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UIDListReply::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UIDListReply::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UIDListReply::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 UIDListReply::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.UIDListReply.universe)
  return universe_;
}
inline void UIDListReply::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.UIDListReply.universe)
}

// repeated .ola.proto.UID uid = 2;
inline int UIDListReply::uid_size() const {
  return uid_.size();
}
inline void UIDListReply::clear_uid() {
  uid_.Clear();
}
inline const ::ola::proto::UID& UIDListReply::uid(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.UIDListReply.uid)
  return uid_.Get(index);
}
inline ::ola::proto::UID* UIDListReply::mutable_uid(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.UIDListReply.uid)
  return uid_.Mutable(index);
}
inline ::ola::proto::UID* UIDListReply::add_uid() {
  // @@protoc_insertion_point(field_add:ola.proto.UIDListReply.uid)
  return uid_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::UID >&
UIDListReply::uid() const {
  // @@protoc_insertion_point(field_list:ola.proto.UIDListReply.uid)
  return uid_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::UID >*
UIDListReply::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.UIDListReply.uid)
  return &uid_;
}

// -------------------------------------------------------------------

// RDMRequestOverrideOptions

// optional uint32 sub_start_code = 1;
inline bool RDMRequestOverrideOptions::has_sub_start_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RDMRequestOverrideOptions::set_has_sub_start_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RDMRequestOverrideOptions::clear_has_sub_start_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RDMRequestOverrideOptions::clear_sub_start_code() {
  sub_start_code_ = 0u;
  clear_has_sub_start_code();
}
inline ::google::protobuf::uint32 RDMRequestOverrideOptions::sub_start_code() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequestOverrideOptions.sub_start_code)
  return sub_start_code_;
}
inline void RDMRequestOverrideOptions::set_sub_start_code(::google::protobuf::uint32 value) {
  set_has_sub_start_code();
  sub_start_code_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequestOverrideOptions.sub_start_code)
}

// optional uint32 message_length = 2;
inline bool RDMRequestOverrideOptions::has_message_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RDMRequestOverrideOptions::set_has_message_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RDMRequestOverrideOptions::clear_has_message_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RDMRequestOverrideOptions::clear_message_length() {
  message_length_ = 0u;
  clear_has_message_length();
}
inline ::google::protobuf::uint32 RDMRequestOverrideOptions::message_length() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequestOverrideOptions.message_length)
  return message_length_;
}
inline void RDMRequestOverrideOptions::set_message_length(::google::protobuf::uint32 value) {
  set_has_message_length();
  message_length_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequestOverrideOptions.message_length)
}

// optional uint32 message_count = 3;
inline bool RDMRequestOverrideOptions::has_message_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RDMRequestOverrideOptions::set_has_message_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RDMRequestOverrideOptions::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RDMRequestOverrideOptions::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 RDMRequestOverrideOptions::message_count() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequestOverrideOptions.message_count)
  return message_count_;
}
inline void RDMRequestOverrideOptions::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequestOverrideOptions.message_count)
}

// optional uint32 checksum = 4;
inline bool RDMRequestOverrideOptions::has_checksum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RDMRequestOverrideOptions::set_has_checksum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RDMRequestOverrideOptions::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RDMRequestOverrideOptions::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
inline ::google::protobuf::uint32 RDMRequestOverrideOptions::checksum() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequestOverrideOptions.checksum)
  return checksum_;
}
inline void RDMRequestOverrideOptions::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequestOverrideOptions.checksum)
}

// -------------------------------------------------------------------

// RDMRequest

// required int32 universe = 1;
inline bool RDMRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RDMRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RDMRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RDMRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 RDMRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.universe)
  return universe_;
}
inline void RDMRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequest.universe)
}

// required .ola.proto.UID uid = 2;
inline bool RDMRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RDMRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RDMRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RDMRequest::clear_uid() {
  if (uid_ != NULL) uid_->::ola::proto::UID::Clear();
  clear_has_uid();
}
inline const ::ola::proto::UID& RDMRequest::uid() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.uid)
  return uid_ != NULL ? *uid_ : *default_instance_->uid_;
}
inline ::ola::proto::UID* RDMRequest::mutable_uid() {
  set_has_uid();
  if (uid_ == NULL) uid_ = new ::ola::proto::UID;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMRequest.uid)
  return uid_;
}
inline ::ola::proto::UID* RDMRequest::release_uid() {
  clear_has_uid();
  ::ola::proto::UID* temp = uid_;
  uid_ = NULL;
  return temp;
}
inline void RDMRequest::set_allocated_uid(::ola::proto::UID* uid) {
  delete uid_;
  uid_ = uid;
  if (uid) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMRequest.uid)
}

// required int32 sub_device = 3;
inline bool RDMRequest::has_sub_device() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RDMRequest::set_has_sub_device() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RDMRequest::clear_has_sub_device() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RDMRequest::clear_sub_device() {
  sub_device_ = 0;
  clear_has_sub_device();
}
inline ::google::protobuf::int32 RDMRequest::sub_device() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.sub_device)
  return sub_device_;
}
inline void RDMRequest::set_sub_device(::google::protobuf::int32 value) {
  set_has_sub_device();
  sub_device_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequest.sub_device)
}

// required int32 param_id = 4;
inline bool RDMRequest::has_param_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RDMRequest::set_has_param_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RDMRequest::clear_has_param_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RDMRequest::clear_param_id() {
  param_id_ = 0;
  clear_has_param_id();
}
inline ::google::protobuf::int32 RDMRequest::param_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.param_id)
  return param_id_;
}
inline void RDMRequest::set_param_id(::google::protobuf::int32 value) {
  set_has_param_id();
  param_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequest.param_id)
}

// required bytes data = 5;
inline bool RDMRequest::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RDMRequest::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RDMRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RDMRequest::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& RDMRequest::data() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.data)
  return *data_;
}
inline void RDMRequest::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequest.data)
}
inline void RDMRequest::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.RDMRequest.data)
}
inline void RDMRequest::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.RDMRequest.data)
}
inline ::std::string* RDMRequest::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMRequest.data)
  return data_;
}
inline ::std::string* RDMRequest::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RDMRequest::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMRequest.data)
}

// required bool is_set = 6;
inline bool RDMRequest::has_is_set() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RDMRequest::set_has_is_set() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RDMRequest::clear_has_is_set() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RDMRequest::clear_is_set() {
  is_set_ = false;
  clear_has_is_set();
}
inline bool RDMRequest::is_set() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.is_set)
  return is_set_;
}
inline void RDMRequest::set_is_set(bool value) {
  set_has_is_set();
  is_set_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequest.is_set)
}

// optional bool include_raw_response = 7 [default = false];
inline bool RDMRequest::has_include_raw_response() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RDMRequest::set_has_include_raw_response() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RDMRequest::clear_has_include_raw_response() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RDMRequest::clear_include_raw_response() {
  include_raw_response_ = false;
  clear_has_include_raw_response();
}
inline bool RDMRequest::include_raw_response() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.include_raw_response)
  return include_raw_response_;
}
inline void RDMRequest::set_include_raw_response(bool value) {
  set_has_include_raw_response();
  include_raw_response_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMRequest.include_raw_response)
}

// optional .ola.proto.RDMRequestOverrideOptions options = 8;
inline bool RDMRequest::has_options() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RDMRequest::set_has_options() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RDMRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RDMRequest::clear_options() {
  if (options_ != NULL) options_->::ola::proto::RDMRequestOverrideOptions::Clear();
  clear_has_options();
}
inline const ::ola::proto::RDMRequestOverrideOptions& RDMRequest::options() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::ola::proto::RDMRequestOverrideOptions* RDMRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::ola::proto::RDMRequestOverrideOptions;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMRequest.options)
  return options_;
}
inline ::ola::proto::RDMRequestOverrideOptions* RDMRequest::release_options() {
  clear_has_options();
  ::ola::proto::RDMRequestOverrideOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void RDMRequest::set_allocated_options(::ola::proto::RDMRequestOverrideOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMRequest.options)
}

// -------------------------------------------------------------------

// RDMDiscoveryRequest

// required int32 universe = 1;
inline bool RDMDiscoveryRequest::has_universe() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RDMDiscoveryRequest::set_has_universe() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RDMDiscoveryRequest::clear_has_universe() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RDMDiscoveryRequest::clear_universe() {
  universe_ = 0;
  clear_has_universe();
}
inline ::google::protobuf::int32 RDMDiscoveryRequest::universe() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.universe)
  return universe_;
}
inline void RDMDiscoveryRequest::set_universe(::google::protobuf::int32 value) {
  set_has_universe();
  universe_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMDiscoveryRequest.universe)
}

// required .ola.proto.UID uid = 2;
inline bool RDMDiscoveryRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RDMDiscoveryRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RDMDiscoveryRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RDMDiscoveryRequest::clear_uid() {
  if (uid_ != NULL) uid_->::ola::proto::UID::Clear();
  clear_has_uid();
}
inline const ::ola::proto::UID& RDMDiscoveryRequest::uid() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.uid)
  return uid_ != NULL ? *uid_ : *default_instance_->uid_;
}
inline ::ola::proto::UID* RDMDiscoveryRequest::mutable_uid() {
  set_has_uid();
  if (uid_ == NULL) uid_ = new ::ola::proto::UID;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMDiscoveryRequest.uid)
  return uid_;
}
inline ::ola::proto::UID* RDMDiscoveryRequest::release_uid() {
  clear_has_uid();
  ::ola::proto::UID* temp = uid_;
  uid_ = NULL;
  return temp;
}
inline void RDMDiscoveryRequest::set_allocated_uid(::ola::proto::UID* uid) {
  delete uid_;
  uid_ = uid;
  if (uid) {
    set_has_uid();
  } else {
    clear_has_uid();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMDiscoveryRequest.uid)
}

// required int32 sub_device = 3;
inline bool RDMDiscoveryRequest::has_sub_device() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RDMDiscoveryRequest::set_has_sub_device() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RDMDiscoveryRequest::clear_has_sub_device() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RDMDiscoveryRequest::clear_sub_device() {
  sub_device_ = 0;
  clear_has_sub_device();
}
inline ::google::protobuf::int32 RDMDiscoveryRequest::sub_device() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.sub_device)
  return sub_device_;
}
inline void RDMDiscoveryRequest::set_sub_device(::google::protobuf::int32 value) {
  set_has_sub_device();
  sub_device_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMDiscoveryRequest.sub_device)
}

// required int32 param_id = 4;
inline bool RDMDiscoveryRequest::has_param_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RDMDiscoveryRequest::set_has_param_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RDMDiscoveryRequest::clear_has_param_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RDMDiscoveryRequest::clear_param_id() {
  param_id_ = 0;
  clear_has_param_id();
}
inline ::google::protobuf::int32 RDMDiscoveryRequest::param_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.param_id)
  return param_id_;
}
inline void RDMDiscoveryRequest::set_param_id(::google::protobuf::int32 value) {
  set_has_param_id();
  param_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMDiscoveryRequest.param_id)
}

// required bytes data = 5;
inline bool RDMDiscoveryRequest::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RDMDiscoveryRequest::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RDMDiscoveryRequest::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RDMDiscoveryRequest::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& RDMDiscoveryRequest::data() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.data)
  return *data_;
}
inline void RDMDiscoveryRequest::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.RDMDiscoveryRequest.data)
}
inline void RDMDiscoveryRequest::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.RDMDiscoveryRequest.data)
}
inline void RDMDiscoveryRequest::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.RDMDiscoveryRequest.data)
}
inline ::std::string* RDMDiscoveryRequest::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMDiscoveryRequest.data)
  return data_;
}
inline ::std::string* RDMDiscoveryRequest::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RDMDiscoveryRequest::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMDiscoveryRequest.data)
}

// optional bool include_raw_response = 6 [default = false];
inline bool RDMDiscoveryRequest::has_include_raw_response() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RDMDiscoveryRequest::set_has_include_raw_response() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RDMDiscoveryRequest::clear_has_include_raw_response() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RDMDiscoveryRequest::clear_include_raw_response() {
  include_raw_response_ = false;
  clear_has_include_raw_response();
}
inline bool RDMDiscoveryRequest::include_raw_response() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.include_raw_response)
  return include_raw_response_;
}
inline void RDMDiscoveryRequest::set_include_raw_response(bool value) {
  set_has_include_raw_response();
  include_raw_response_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMDiscoveryRequest.include_raw_response)
}

// optional .ola.proto.RDMRequestOverrideOptions options = 8;
inline bool RDMDiscoveryRequest::has_options() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RDMDiscoveryRequest::set_has_options() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RDMDiscoveryRequest::clear_has_options() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RDMDiscoveryRequest::clear_options() {
  if (options_ != NULL) options_->::ola::proto::RDMRequestOverrideOptions::Clear();
  clear_has_options();
}
inline const ::ola::proto::RDMRequestOverrideOptions& RDMDiscoveryRequest::options() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMDiscoveryRequest.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
inline ::ola::proto::RDMRequestOverrideOptions* RDMDiscoveryRequest::mutable_options() {
  set_has_options();
  if (options_ == NULL) options_ = new ::ola::proto::RDMRequestOverrideOptions;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMDiscoveryRequest.options)
  return options_;
}
inline ::ola::proto::RDMRequestOverrideOptions* RDMDiscoveryRequest::release_options() {
  clear_has_options();
  ::ola::proto::RDMRequestOverrideOptions* temp = options_;
  options_ = NULL;
  return temp;
}
inline void RDMDiscoveryRequest::set_allocated_options(::ola::proto::RDMRequestOverrideOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMDiscoveryRequest.options)
}

// -------------------------------------------------------------------

// RDMFrameTiming

// optional int32 response_delay = 1;
inline bool RDMFrameTiming::has_response_delay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RDMFrameTiming::set_has_response_delay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RDMFrameTiming::clear_has_response_delay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RDMFrameTiming::clear_response_delay() {
  response_delay_ = 0;
  clear_has_response_delay();
}
inline ::google::protobuf::int32 RDMFrameTiming::response_delay() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMFrameTiming.response_delay)
  return response_delay_;
}
inline void RDMFrameTiming::set_response_delay(::google::protobuf::int32 value) {
  set_has_response_delay();
  response_delay_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMFrameTiming.response_delay)
}

// optional int32 break_time = 2;
inline bool RDMFrameTiming::has_break_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RDMFrameTiming::set_has_break_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RDMFrameTiming::clear_has_break_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RDMFrameTiming::clear_break_time() {
  break_time_ = 0;
  clear_has_break_time();
}
inline ::google::protobuf::int32 RDMFrameTiming::break_time() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMFrameTiming.break_time)
  return break_time_;
}
inline void RDMFrameTiming::set_break_time(::google::protobuf::int32 value) {
  set_has_break_time();
  break_time_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMFrameTiming.break_time)
}

// optional int32 mark_time = 3;
inline bool RDMFrameTiming::has_mark_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RDMFrameTiming::set_has_mark_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RDMFrameTiming::clear_has_mark_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RDMFrameTiming::clear_mark_time() {
  mark_time_ = 0;
  clear_has_mark_time();
}
inline ::google::protobuf::int32 RDMFrameTiming::mark_time() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMFrameTiming.mark_time)
  return mark_time_;
}
inline void RDMFrameTiming::set_mark_time(::google::protobuf::int32 value) {
  set_has_mark_time();
  mark_time_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMFrameTiming.mark_time)
}

// optional int32 data_time = 4;
inline bool RDMFrameTiming::has_data_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RDMFrameTiming::set_has_data_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RDMFrameTiming::clear_has_data_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RDMFrameTiming::clear_data_time() {
  data_time_ = 0;
  clear_has_data_time();
}
inline ::google::protobuf::int32 RDMFrameTiming::data_time() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMFrameTiming.data_time)
  return data_time_;
}
inline void RDMFrameTiming::set_data_time(::google::protobuf::int32 value) {
  set_has_data_time();
  data_time_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMFrameTiming.data_time)
}

// -------------------------------------------------------------------

// RDMFrame

// optional bytes raw_response = 1;
inline bool RDMFrame::has_raw_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RDMFrame::set_has_raw_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RDMFrame::clear_has_raw_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RDMFrame::clear_raw_response() {
  if (raw_response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_response_->clear();
  }
  clear_has_raw_response();
}
inline const ::std::string& RDMFrame::raw_response() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMFrame.raw_response)
  return *raw_response_;
}
inline void RDMFrame::set_raw_response(const ::std::string& value) {
  set_has_raw_response();
  if (raw_response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_response_ = new ::std::string;
  }
  raw_response_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.RDMFrame.raw_response)
}
inline void RDMFrame::set_raw_response(const char* value) {
  set_has_raw_response();
  if (raw_response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_response_ = new ::std::string;
  }
  raw_response_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.RDMFrame.raw_response)
}
inline void RDMFrame::set_raw_response(const void* value, size_t size) {
  set_has_raw_response();
  if (raw_response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_response_ = new ::std::string;
  }
  raw_response_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.RDMFrame.raw_response)
}
inline ::std::string* RDMFrame::mutable_raw_response() {
  set_has_raw_response();
  if (raw_response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_response_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMFrame.raw_response)
  return raw_response_;
}
inline ::std::string* RDMFrame::release_raw_response() {
  clear_has_raw_response();
  if (raw_response_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = raw_response_;
    raw_response_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RDMFrame::set_allocated_raw_response(::std::string* raw_response) {
  if (raw_response_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete raw_response_;
  }
  if (raw_response) {
    set_has_raw_response();
    raw_response_ = raw_response;
  } else {
    clear_has_raw_response();
    raw_response_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMFrame.raw_response)
}

// optional .ola.proto.RDMFrameTiming timing = 2;
inline bool RDMFrame::has_timing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RDMFrame::set_has_timing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RDMFrame::clear_has_timing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RDMFrame::clear_timing() {
  if (timing_ != NULL) timing_->::ola::proto::RDMFrameTiming::Clear();
  clear_has_timing();
}
inline const ::ola::proto::RDMFrameTiming& RDMFrame::timing() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMFrame.timing)
  return timing_ != NULL ? *timing_ : *default_instance_->timing_;
}
inline ::ola::proto::RDMFrameTiming* RDMFrame::mutable_timing() {
  set_has_timing();
  if (timing_ == NULL) timing_ = new ::ola::proto::RDMFrameTiming;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMFrame.timing)
  return timing_;
}
inline ::ola::proto::RDMFrameTiming* RDMFrame::release_timing() {
  clear_has_timing();
  ::ola::proto::RDMFrameTiming* temp = timing_;
  timing_ = NULL;
  return temp;
}
inline void RDMFrame::set_allocated_timing(::ola::proto::RDMFrameTiming* timing) {
  delete timing_;
  timing_ = timing;
  if (timing) {
    set_has_timing();
  } else {
    clear_has_timing();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMFrame.timing)
}

// -------------------------------------------------------------------

// RDMResponse

// required .ola.proto.RDMResponseCode response_code = 1;
inline bool RDMResponse::has_response_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RDMResponse::set_has_response_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RDMResponse::clear_has_response_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RDMResponse::clear_response_code() {
  response_code_ = 0;
  clear_has_response_code();
}
inline ::ola::proto::RDMResponseCode RDMResponse::response_code() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.response_code)
  return static_cast< ::ola::proto::RDMResponseCode >(response_code_);
}
inline void RDMResponse::set_response_code(::ola::proto::RDMResponseCode value) {
  assert(::ola::proto::RDMResponseCode_IsValid(value));
  set_has_response_code();
  response_code_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.response_code)
}

// optional .ola.proto.UID source_uid = 9;
inline bool RDMResponse::has_source_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RDMResponse::set_has_source_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RDMResponse::clear_has_source_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RDMResponse::clear_source_uid() {
  if (source_uid_ != NULL) source_uid_->::ola::proto::UID::Clear();
  clear_has_source_uid();
}
inline const ::ola::proto::UID& RDMResponse::source_uid() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.source_uid)
  return source_uid_ != NULL ? *source_uid_ : *default_instance_->source_uid_;
}
inline ::ola::proto::UID* RDMResponse::mutable_source_uid() {
  set_has_source_uid();
  if (source_uid_ == NULL) source_uid_ = new ::ola::proto::UID;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMResponse.source_uid)
  return source_uid_;
}
inline ::ola::proto::UID* RDMResponse::release_source_uid() {
  clear_has_source_uid();
  ::ola::proto::UID* temp = source_uid_;
  source_uid_ = NULL;
  return temp;
}
inline void RDMResponse::set_allocated_source_uid(::ola::proto::UID* source_uid) {
  delete source_uid_;
  source_uid_ = source_uid;
  if (source_uid) {
    set_has_source_uid();
  } else {
    clear_has_source_uid();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMResponse.source_uid)
}

// optional .ola.proto.UID dest_uid = 10;
inline bool RDMResponse::has_dest_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RDMResponse::set_has_dest_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RDMResponse::clear_has_dest_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RDMResponse::clear_dest_uid() {
  if (dest_uid_ != NULL) dest_uid_->::ola::proto::UID::Clear();
  clear_has_dest_uid();
}
inline const ::ola::proto::UID& RDMResponse::dest_uid() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.dest_uid)
  return dest_uid_ != NULL ? *dest_uid_ : *default_instance_->dest_uid_;
}
inline ::ola::proto::UID* RDMResponse::mutable_dest_uid() {
  set_has_dest_uid();
  if (dest_uid_ == NULL) dest_uid_ = new ::ola::proto::UID;
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMResponse.dest_uid)
  return dest_uid_;
}
inline ::ola::proto::UID* RDMResponse::release_dest_uid() {
  clear_has_dest_uid();
  ::ola::proto::UID* temp = dest_uid_;
  dest_uid_ = NULL;
  return temp;
}
inline void RDMResponse::set_allocated_dest_uid(::ola::proto::UID* dest_uid) {
  delete dest_uid_;
  dest_uid_ = dest_uid;
  if (dest_uid) {
    set_has_dest_uid();
  } else {
    clear_has_dest_uid();
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMResponse.dest_uid)
}

// optional int32 transaction_number = 11;
inline bool RDMResponse::has_transaction_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RDMResponse::set_has_transaction_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RDMResponse::clear_has_transaction_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RDMResponse::clear_transaction_number() {
  transaction_number_ = 0;
  clear_has_transaction_number();
}
inline ::google::protobuf::int32 RDMResponse::transaction_number() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.transaction_number)
  return transaction_number_;
}
inline void RDMResponse::set_transaction_number(::google::protobuf::int32 value) {
  set_has_transaction_number();
  transaction_number_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.transaction_number)
}

// optional .ola.proto.RDMResponseType response_type = 2;
inline bool RDMResponse::has_response_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RDMResponse::set_has_response_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RDMResponse::clear_has_response_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RDMResponse::clear_response_type() {
  response_type_ = 0;
  clear_has_response_type();
}
inline ::ola::proto::RDMResponseType RDMResponse::response_type() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.response_type)
  return static_cast< ::ola::proto::RDMResponseType >(response_type_);
}
inline void RDMResponse::set_response_type(::ola::proto::RDMResponseType value) {
  assert(::ola::proto::RDMResponseType_IsValid(value));
  set_has_response_type();
  response_type_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.response_type)
}

// optional uint32 message_count = 3 [default = 0];
inline bool RDMResponse::has_message_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RDMResponse::set_has_message_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RDMResponse::clear_has_message_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RDMResponse::clear_message_count() {
  message_count_ = 0u;
  clear_has_message_count();
}
inline ::google::protobuf::uint32 RDMResponse::message_count() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.message_count)
  return message_count_;
}
inline void RDMResponse::set_message_count(::google::protobuf::uint32 value) {
  set_has_message_count();
  message_count_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.message_count)
}

// optional uint32 sub_device = 7;
inline bool RDMResponse::has_sub_device() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RDMResponse::set_has_sub_device() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RDMResponse::clear_has_sub_device() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RDMResponse::clear_sub_device() {
  sub_device_ = 0u;
  clear_has_sub_device();
}
inline ::google::protobuf::uint32 RDMResponse::sub_device() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.sub_device)
  return sub_device_;
}
inline void RDMResponse::set_sub_device(::google::protobuf::uint32 value) {
  set_has_sub_device();
  sub_device_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.sub_device)
}

// optional .ola.proto.RDMCommandClass command_class = 6;
inline bool RDMResponse::has_command_class() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RDMResponse::set_has_command_class() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RDMResponse::clear_has_command_class() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RDMResponse::clear_command_class() {
  command_class_ = 0;
  clear_has_command_class();
}
inline ::ola::proto::RDMCommandClass RDMResponse::command_class() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.command_class)
  return static_cast< ::ola::proto::RDMCommandClass >(command_class_);
}
inline void RDMResponse::set_command_class(::ola::proto::RDMCommandClass value) {
  assert(::ola::proto::RDMCommandClass_IsValid(value));
  set_has_command_class();
  command_class_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.command_class)
}

// optional uint32 param_id = 5;
inline bool RDMResponse::has_param_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RDMResponse::set_has_param_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RDMResponse::clear_has_param_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RDMResponse::clear_param_id() {
  param_id_ = 0u;
  clear_has_param_id();
}
inline ::google::protobuf::uint32 RDMResponse::param_id() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.param_id)
  return param_id_;
}
inline void RDMResponse::set_param_id(::google::protobuf::uint32 value) {
  set_has_param_id();
  param_id_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.param_id)
}

// optional bytes data = 4 [default = ""];
inline bool RDMResponse::has_data() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RDMResponse::set_has_data() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RDMResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RDMResponse::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& RDMResponse::data() const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.data)
  return *data_;
}
inline void RDMResponse::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.data)
}
inline void RDMResponse::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.RDMResponse.data)
}
inline void RDMResponse::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.RDMResponse.data)
}
inline ::std::string* RDMResponse::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMResponse.data)
  return data_;
}
inline ::std::string* RDMResponse::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RDMResponse::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ola.proto.RDMResponse.data)
}

// repeated bytes raw_response = 8;
inline int RDMResponse::raw_response_size() const {
  return raw_response_.size();
}
inline void RDMResponse::clear_raw_response() {
  raw_response_.Clear();
}
inline const ::std::string& RDMResponse::raw_response(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.raw_response)
  return raw_response_.Get(index);
}
inline ::std::string* RDMResponse::mutable_raw_response(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMResponse.raw_response)
  return raw_response_.Mutable(index);
}
inline void RDMResponse::set_raw_response(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ola.proto.RDMResponse.raw_response)
  raw_response_.Mutable(index)->assign(value);
}
inline void RDMResponse::set_raw_response(int index, const char* value) {
  raw_response_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ola.proto.RDMResponse.raw_response)
}
inline void RDMResponse::set_raw_response(int index, const void* value, size_t size) {
  raw_response_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ola.proto.RDMResponse.raw_response)
}
inline ::std::string* RDMResponse::add_raw_response() {
  return raw_response_.Add();
}
inline void RDMResponse::add_raw_response(const ::std::string& value) {
  raw_response_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ola.proto.RDMResponse.raw_response)
}
inline void RDMResponse::add_raw_response(const char* value) {
  raw_response_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ola.proto.RDMResponse.raw_response)
}
inline void RDMResponse::add_raw_response(const void* value, size_t size) {
  raw_response_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ola.proto.RDMResponse.raw_response)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RDMResponse::raw_response() const {
  // @@protoc_insertion_point(field_list:ola.proto.RDMResponse.raw_response)
  return raw_response_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RDMResponse::mutable_raw_response() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.RDMResponse.raw_response)
  return &raw_response_;
}

// repeated .ola.proto.RDMFrame raw_frame = 12;
inline int RDMResponse::raw_frame_size() const {
  return raw_frame_.size();
}
inline void RDMResponse::clear_raw_frame() {
  raw_frame_.Clear();
}
inline const ::ola::proto::RDMFrame& RDMResponse::raw_frame(int index) const {
  // @@protoc_insertion_point(field_get:ola.proto.RDMResponse.raw_frame)
  return raw_frame_.Get(index);
}
inline ::ola::proto::RDMFrame* RDMResponse::mutable_raw_frame(int index) {
  // @@protoc_insertion_point(field_mutable:ola.proto.RDMResponse.raw_frame)
  return raw_frame_.Mutable(index);
}
inline ::ola::proto::RDMFrame* RDMResponse::add_raw_frame() {
  // @@protoc_insertion_point(field_add:ola.proto.RDMResponse.raw_frame)
  return raw_frame_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ola::proto::RDMFrame >&
RDMResponse::raw_frame() const {
  // @@protoc_insertion_point(field_list:ola.proto.RDMResponse.raw_frame)
  return raw_frame_;
}
inline ::google::protobuf::RepeatedPtrField< ::ola::proto::RDMFrame >*
RDMResponse::mutable_raw_frame() {
  // @@protoc_insertion_point(field_mutable_list:ola.proto.RDMResponse.raw_frame)
  return &raw_frame_;
}

// -------------------------------------------------------------------

// TimeCode

// required uint32 hours = 1;
inline bool TimeCode::has_hours() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeCode::set_has_hours() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeCode::clear_has_hours() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeCode::clear_hours() {
  hours_ = 0u;
  clear_has_hours();
}
inline ::google::protobuf::uint32 TimeCode::hours() const {
  // @@protoc_insertion_point(field_get:ola.proto.TimeCode.hours)
  return hours_;
}
inline void TimeCode::set_hours(::google::protobuf::uint32 value) {
  set_has_hours();
  hours_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.TimeCode.hours)
}

// required uint32 minutes = 2;
inline bool TimeCode::has_minutes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeCode::set_has_minutes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeCode::clear_has_minutes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeCode::clear_minutes() {
  minutes_ = 0u;
  clear_has_minutes();
}
inline ::google::protobuf::uint32 TimeCode::minutes() const {
  // @@protoc_insertion_point(field_get:ola.proto.TimeCode.minutes)
  return minutes_;
}
inline void TimeCode::set_minutes(::google::protobuf::uint32 value) {
  set_has_minutes();
  minutes_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.TimeCode.minutes)
}

// required uint32 seconds = 3;
inline bool TimeCode::has_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimeCode::set_has_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimeCode::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimeCode::clear_seconds() {
  seconds_ = 0u;
  clear_has_seconds();
}
inline ::google::protobuf::uint32 TimeCode::seconds() const {
  // @@protoc_insertion_point(field_get:ola.proto.TimeCode.seconds)
  return seconds_;
}
inline void TimeCode::set_seconds(::google::protobuf::uint32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.TimeCode.seconds)
}

// required uint32 frames = 4;
inline bool TimeCode::has_frames() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TimeCode::set_has_frames() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TimeCode::clear_has_frames() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TimeCode::clear_frames() {
  frames_ = 0u;
  clear_has_frames();
}
inline ::google::protobuf::uint32 TimeCode::frames() const {
  // @@protoc_insertion_point(field_get:ola.proto.TimeCode.frames)
  return frames_;
}
inline void TimeCode::set_frames(::google::protobuf::uint32 value) {
  set_has_frames();
  frames_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.TimeCode.frames)
}

// required .ola.proto.TimeCodeType type = 5;
inline bool TimeCode::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TimeCode::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TimeCode::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TimeCode::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::ola::proto::TimeCodeType TimeCode::type() const {
  // @@protoc_insertion_point(field_get:ola.proto.TimeCode.type)
  return static_cast< ::ola::proto::TimeCodeType >(type_);
}
inline void TimeCode::set_type(::ola::proto::TimeCodeType value) {
  assert(::ola::proto::TimeCodeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ola.proto.TimeCode.type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace ola

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ola::proto::RegisterAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::RegisterAction>() {
  return ::ola::proto::RegisterAction_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::PatchAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::PatchAction>() {
  return ::ola::proto::PatchAction_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::MergeMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::MergeMode>() {
  return ::ola::proto::MergeMode_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::PluginIds> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::PluginIds>() {
  return ::ola::proto::PluginIds_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::RDMResponseCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::RDMResponseCode>() {
  return ::ola::proto::RDMResponseCode_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::RDMResponseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::RDMResponseType>() {
  return ::ola::proto::RDMResponseType_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::RDMCommandClass> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::RDMCommandClass>() {
  return ::ola::proto::RDMCommandClass_descriptor();
}
template <> struct is_proto_enum< ::ola::proto::TimeCodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ola::proto::TimeCodeType>() {
  return ::ola::proto::TimeCodeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Ola_2eproto__INCLUDED
